/* This file was automatically generated by CasADi 3.6.4.
 *  It consists of: 
 *   1) content generated by CasADi runtime: not copyrighted
 *   2) template code copied from CasADi source: permissively licensed (MIT-0)
 *   3) user code: owned by the user
 *
 */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) equality_constraint_function_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_clear CASADI_PREFIX(clear)
#define casadi_copy CASADI_PREFIX(copy)
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_f1 CASADI_PREFIX(f1)
#define casadi_mtimes CASADI_PREFIX(mtimes)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s10 CASADI_PREFIX(s10)
#define casadi_s100 CASADI_PREFIX(s100)
#define casadi_s101 CASADI_PREFIX(s101)
#define casadi_s102 CASADI_PREFIX(s102)
#define casadi_s103 CASADI_PREFIX(s103)
#define casadi_s104 CASADI_PREFIX(s104)
#define casadi_s105 CASADI_PREFIX(s105)
#define casadi_s106 CASADI_PREFIX(s106)
#define casadi_s107 CASADI_PREFIX(s107)
#define casadi_s108 CASADI_PREFIX(s108)
#define casadi_s109 CASADI_PREFIX(s109)
#define casadi_s11 CASADI_PREFIX(s11)
#define casadi_s110 CASADI_PREFIX(s110)
#define casadi_s111 CASADI_PREFIX(s111)
#define casadi_s112 CASADI_PREFIX(s112)
#define casadi_s113 CASADI_PREFIX(s113)
#define casadi_s114 CASADI_PREFIX(s114)
#define casadi_s115 CASADI_PREFIX(s115)
#define casadi_s116 CASADI_PREFIX(s116)
#define casadi_s117 CASADI_PREFIX(s117)
#define casadi_s12 CASADI_PREFIX(s12)
#define casadi_s13 CASADI_PREFIX(s13)
#define casadi_s14 CASADI_PREFIX(s14)
#define casadi_s15 CASADI_PREFIX(s15)
#define casadi_s16 CASADI_PREFIX(s16)
#define casadi_s17 CASADI_PREFIX(s17)
#define casadi_s18 CASADI_PREFIX(s18)
#define casadi_s19 CASADI_PREFIX(s19)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_s20 CASADI_PREFIX(s20)
#define casadi_s21 CASADI_PREFIX(s21)
#define casadi_s22 CASADI_PREFIX(s22)
#define casadi_s23 CASADI_PREFIX(s23)
#define casadi_s24 CASADI_PREFIX(s24)
#define casadi_s25 CASADI_PREFIX(s25)
#define casadi_s26 CASADI_PREFIX(s26)
#define casadi_s27 CASADI_PREFIX(s27)
#define casadi_s28 CASADI_PREFIX(s28)
#define casadi_s29 CASADI_PREFIX(s29)
#define casadi_s3 CASADI_PREFIX(s3)
#define casadi_s30 CASADI_PREFIX(s30)
#define casadi_s31 CASADI_PREFIX(s31)
#define casadi_s32 CASADI_PREFIX(s32)
#define casadi_s33 CASADI_PREFIX(s33)
#define casadi_s34 CASADI_PREFIX(s34)
#define casadi_s35 CASADI_PREFIX(s35)
#define casadi_s36 CASADI_PREFIX(s36)
#define casadi_s37 CASADI_PREFIX(s37)
#define casadi_s38 CASADI_PREFIX(s38)
#define casadi_s39 CASADI_PREFIX(s39)
#define casadi_s4 CASADI_PREFIX(s4)
#define casadi_s40 CASADI_PREFIX(s40)
#define casadi_s41 CASADI_PREFIX(s41)
#define casadi_s42 CASADI_PREFIX(s42)
#define casadi_s43 CASADI_PREFIX(s43)
#define casadi_s44 CASADI_PREFIX(s44)
#define casadi_s45 CASADI_PREFIX(s45)
#define casadi_s46 CASADI_PREFIX(s46)
#define casadi_s47 CASADI_PREFIX(s47)
#define casadi_s48 CASADI_PREFIX(s48)
#define casadi_s49 CASADI_PREFIX(s49)
#define casadi_s5 CASADI_PREFIX(s5)
#define casadi_s50 CASADI_PREFIX(s50)
#define casadi_s51 CASADI_PREFIX(s51)
#define casadi_s52 CASADI_PREFIX(s52)
#define casadi_s53 CASADI_PREFIX(s53)
#define casadi_s54 CASADI_PREFIX(s54)
#define casadi_s55 CASADI_PREFIX(s55)
#define casadi_s56 CASADI_PREFIX(s56)
#define casadi_s57 CASADI_PREFIX(s57)
#define casadi_s58 CASADI_PREFIX(s58)
#define casadi_s59 CASADI_PREFIX(s59)
#define casadi_s6 CASADI_PREFIX(s6)
#define casadi_s60 CASADI_PREFIX(s60)
#define casadi_s61 CASADI_PREFIX(s61)
#define casadi_s62 CASADI_PREFIX(s62)
#define casadi_s63 CASADI_PREFIX(s63)
#define casadi_s64 CASADI_PREFIX(s64)
#define casadi_s65 CASADI_PREFIX(s65)
#define casadi_s66 CASADI_PREFIX(s66)
#define casadi_s67 CASADI_PREFIX(s67)
#define casadi_s68 CASADI_PREFIX(s68)
#define casadi_s69 CASADI_PREFIX(s69)
#define casadi_s7 CASADI_PREFIX(s7)
#define casadi_s70 CASADI_PREFIX(s70)
#define casadi_s71 CASADI_PREFIX(s71)
#define casadi_s72 CASADI_PREFIX(s72)
#define casadi_s73 CASADI_PREFIX(s73)
#define casadi_s74 CASADI_PREFIX(s74)
#define casadi_s75 CASADI_PREFIX(s75)
#define casadi_s76 CASADI_PREFIX(s76)
#define casadi_s77 CASADI_PREFIX(s77)
#define casadi_s78 CASADI_PREFIX(s78)
#define casadi_s79 CASADI_PREFIX(s79)
#define casadi_s8 CASADI_PREFIX(s8)
#define casadi_s80 CASADI_PREFIX(s80)
#define casadi_s81 CASADI_PREFIX(s81)
#define casadi_s82 CASADI_PREFIX(s82)
#define casadi_s83 CASADI_PREFIX(s83)
#define casadi_s84 CASADI_PREFIX(s84)
#define casadi_s85 CASADI_PREFIX(s85)
#define casadi_s86 CASADI_PREFIX(s86)
#define casadi_s87 CASADI_PREFIX(s87)
#define casadi_s88 CASADI_PREFIX(s88)
#define casadi_s89 CASADI_PREFIX(s89)
#define casadi_s9 CASADI_PREFIX(s9)
#define casadi_s90 CASADI_PREFIX(s90)
#define casadi_s91 CASADI_PREFIX(s91)
#define casadi_s92 CASADI_PREFIX(s92)
#define casadi_s93 CASADI_PREFIX(s93)
#define casadi_s94 CASADI_PREFIX(s94)
#define casadi_s95 CASADI_PREFIX(s95)
#define casadi_s96 CASADI_PREFIX(s96)
#define casadi_s97 CASADI_PREFIX(s97)
#define casadi_s98 CASADI_PREFIX(s98)
#define casadi_s99 CASADI_PREFIX(s99)
#define casadi_trans CASADI_PREFIX(trans)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

void casadi_clear(casadi_real* x, casadi_int n) {
  casadi_int i;
  if (x) {
    for (i=0; i<n; ++i) *x++ = 0;
  }
}

void casadi_copy(const casadi_real* x, casadi_int n, casadi_real* y) {
  casadi_int i;
  if (y) {
    if (x) {
      for (i=0; i<n; ++i) *y++ = *x++;
    } else {
      for (i=0; i<n; ++i) *y++ = 0.;
    }
  }
}

void casadi_mtimes(const casadi_real* x, const casadi_int* sp_x, const casadi_real* y, const casadi_int* sp_y, casadi_real* z, const casadi_int* sp_z, casadi_real* w, casadi_int tr) {
  casadi_int ncol_x, ncol_y, ncol_z, cc;
  const casadi_int *colind_x, *row_x, *colind_y, *row_y, *colind_z, *row_z;
  ncol_x = sp_x[1];
  colind_x = sp_x+2; row_x = sp_x + 2 + ncol_x+1;
  ncol_y = sp_y[1];
  colind_y = sp_y+2; row_y = sp_y + 2 + ncol_y+1;
  ncol_z = sp_z[1];
  colind_z = sp_z+2; row_z = sp_z + 2 + ncol_z+1;
  if (tr) {
    for (cc=0; cc<ncol_z; ++cc) {
      casadi_int kk;
      for (kk=colind_y[cc]; kk<colind_y[cc+1]; ++kk) {
        w[row_y[kk]] = y[kk];
      }
      for (kk=colind_z[cc]; kk<colind_z[cc+1]; ++kk) {
        casadi_int kk1;
        casadi_int rr = row_z[kk];
        for (kk1=colind_x[rr]; kk1<colind_x[rr+1]; ++kk1) {
          z[kk] += x[kk1] * w[row_x[kk1]];
        }
      }
    }
  } else {
    for (cc=0; cc<ncol_y; ++cc) {
      casadi_int kk;
      for (kk=colind_z[cc]; kk<colind_z[cc+1]; ++kk) {
        w[row_z[kk]] = z[kk];
      }
      for (kk=colind_y[cc]; kk<colind_y[cc+1]; ++kk) {
        casadi_int kk1;
        casadi_int rr = row_y[kk];
        for (kk1=colind_x[rr]; kk1<colind_x[rr+1]; ++kk1) {
          w[row_x[kk1]] += x[kk1]*y[kk];
        }
      }
      for (kk=colind_z[cc]; kk<colind_z[cc+1]; ++kk) {
        z[kk] = w[row_z[kk]];
      }
    }
  }
}

void casadi_trans(const casadi_real* x, const casadi_int* sp_x, casadi_real* y,
    const casadi_int* sp_y, casadi_int* tmp) {
  casadi_int ncol_x, nnz_x, ncol_y, k;
  const casadi_int* row_x, *colind_y;
  ncol_x = sp_x[1];
  nnz_x = sp_x[2 + ncol_x];
  row_x = sp_x + 2 + ncol_x+1;
  ncol_y = sp_y[1];
  colind_y = sp_y+2;
  for (k=0; k<ncol_y; ++k) tmp[k] = colind_y[k];
  for (k=0; k<nnz_x; ++k) {
    y[tmp[row_x[k]]++] = x[k];
  }
}

static const casadi_int casadi_s0[76] = {72, 1, 0, 72, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71};
static const casadi_int casadi_s1[1193] = {34, 34, 0, 34, 68, 102, 136, 170, 204, 238, 272, 306, 340, 374, 408, 442, 476, 510, 544, 578, 612, 646, 680, 714, 748, 782, 816, 850, 884, 918, 952, 986, 1020, 1054, 1088, 1122, 1156, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s2[38] = {34, 1, 0, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s3[703] = {34, 20, 0, 34, 68, 102, 136, 170, 204, 238, 272, 306, 340, 374, 408, 442, 476, 510, 544, 578, 612, 646, 680, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s4[241] = {6, 34, 0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 90, 96, 102, 108, 114, 120, 126, 132, 138, 144, 150, 156, 162, 168, 174, 180, 186, 192, 198, 204, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5};
static const casadi_int casadi_s5[10] = {6, 1, 0, 6, 0, 1, 2, 3, 4, 5};
static const casadi_int casadi_s6[1465] = {42, 34, 0, 42, 84, 126, 168, 210, 252, 294, 336, 378, 420, 462, 504, 546, 588, 630, 672, 714, 756, 798, 840, 882, 924, 966, 1008, 1050, 1092, 1134, 1176, 1218, 1260, 1302, 1344, 1386, 1428, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41};
static const casadi_int casadi_s7[44] = {40, 1, 0, 40, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39};
static const casadi_int casadi_s8[5] = {34, 1, 0, 1, 0};
static const casadi_int casadi_s9[40] = {0, 72, 144, 216, 288, 360, 432, 504, 576, 648, 720, 792, 864, 936, 1008, 1080, 1152, 1224, 1296, 1368, 1440, 1512, 1584, 1656, 1728, 1800, 1872, 1944, 2016, 2088, 2160, 2232, 2304, 2376, 2448, 2482, 2516, 2550, 2584, 2618};
static const casadi_int casadi_s10[5] = {34, 1, 0, 1, 1};
static const casadi_int casadi_s11[40] = {1, 73, 145, 217, 289, 361, 433, 505, 577, 649, 721, 793, 865, 937, 1009, 1081, 1153, 1225, 1297, 1369, 1441, 1513, 1585, 1657, 1729, 1801, 1873, 1945, 2017, 2089, 2161, 2233, 2305, 2377, 2449, 2483, 2517, 2551, 2585, 2619};
static const casadi_int casadi_s12[5] = {34, 1, 0, 1, 2};
static const casadi_int casadi_s13[40] = {2, 74, 146, 218, 290, 362, 434, 506, 578, 650, 722, 794, 866, 938, 1010, 1082, 1154, 1226, 1298, 1370, 1442, 1514, 1586, 1658, 1730, 1802, 1874, 1946, 2018, 2090, 2162, 2234, 2306, 2378, 2450, 2484, 2518, 2552, 2586, 2620};
static const casadi_int casadi_s14[5] = {34, 1, 0, 1, 3};
static const casadi_int casadi_s15[40] = {3, 75, 147, 219, 291, 363, 435, 507, 579, 651, 723, 795, 867, 939, 1011, 1083, 1155, 1227, 1299, 1371, 1443, 1515, 1587, 1659, 1731, 1803, 1875, 1947, 2019, 2091, 2163, 2235, 2307, 2379, 2451, 2485, 2519, 2553, 2587, 2621};
static const casadi_int casadi_s16[5] = {34, 1, 0, 1, 4};
static const casadi_int casadi_s17[40] = {4, 76, 148, 220, 292, 364, 436, 508, 580, 652, 724, 796, 868, 940, 1012, 1084, 1156, 1228, 1300, 1372, 1444, 1516, 1588, 1660, 1732, 1804, 1876, 1948, 2020, 2092, 2164, 2236, 2308, 2380, 2452, 2486, 2520, 2554, 2588, 2622};
static const casadi_int casadi_s18[5] = {34, 1, 0, 1, 5};
static const casadi_int casadi_s19[40] = {5, 77, 149, 221, 293, 365, 437, 509, 581, 653, 725, 797, 869, 941, 1013, 1085, 1157, 1229, 1301, 1373, 1445, 1517, 1589, 1661, 1733, 1805, 1877, 1949, 2021, 2093, 2165, 2237, 2309, 2381, 2453, 2487, 2521, 2555, 2589, 2623};
static const casadi_int casadi_s20[5] = {34, 1, 0, 1, 6};
static const casadi_int casadi_s21[40] = {6, 78, 150, 222, 294, 366, 438, 510, 582, 654, 726, 798, 870, 942, 1014, 1086, 1158, 1230, 1302, 1374, 1446, 1518, 1590, 1662, 1734, 1806, 1878, 1950, 2022, 2094, 2166, 2238, 2310, 2382, 2454, 2488, 2522, 2556, 2590, 2624};
static const casadi_int casadi_s22[5] = {34, 1, 0, 1, 7};
static const casadi_int casadi_s23[40] = {7, 79, 151, 223, 295, 367, 439, 511, 583, 655, 727, 799, 871, 943, 1015, 1087, 1159, 1231, 1303, 1375, 1447, 1519, 1591, 1663, 1735, 1807, 1879, 1951, 2023, 2095, 2167, 2239, 2311, 2383, 2455, 2489, 2523, 2557, 2591, 2625};
static const casadi_int casadi_s24[5] = {34, 1, 0, 1, 8};
static const casadi_int casadi_s25[40] = {8, 80, 152, 224, 296, 368, 440, 512, 584, 656, 728, 800, 872, 944, 1016, 1088, 1160, 1232, 1304, 1376, 1448, 1520, 1592, 1664, 1736, 1808, 1880, 1952, 2024, 2096, 2168, 2240, 2312, 2384, 2456, 2490, 2524, 2558, 2592, 2626};
static const casadi_int casadi_s26[5] = {34, 1, 0, 1, 9};
static const casadi_int casadi_s27[40] = {9, 81, 153, 225, 297, 369, 441, 513, 585, 657, 729, 801, 873, 945, 1017, 1089, 1161, 1233, 1305, 1377, 1449, 1521, 1593, 1665, 1737, 1809, 1881, 1953, 2025, 2097, 2169, 2241, 2313, 2385, 2457, 2491, 2525, 2559, 2593, 2627};
static const casadi_int casadi_s28[5] = {34, 1, 0, 1, 10};
static const casadi_int casadi_s29[40] = {10, 82, 154, 226, 298, 370, 442, 514, 586, 658, 730, 802, 874, 946, 1018, 1090, 1162, 1234, 1306, 1378, 1450, 1522, 1594, 1666, 1738, 1810, 1882, 1954, 2026, 2098, 2170, 2242, 2314, 2386, 2458, 2492, 2526, 2560, 2594, 2628};
static const casadi_int casadi_s30[5] = {34, 1, 0, 1, 11};
static const casadi_int casadi_s31[40] = {11, 83, 155, 227, 299, 371, 443, 515, 587, 659, 731, 803, 875, 947, 1019, 1091, 1163, 1235, 1307, 1379, 1451, 1523, 1595, 1667, 1739, 1811, 1883, 1955, 2027, 2099, 2171, 2243, 2315, 2387, 2459, 2493, 2527, 2561, 2595, 2629};
static const casadi_int casadi_s32[5] = {34, 1, 0, 1, 12};
static const casadi_int casadi_s33[40] = {12, 84, 156, 228, 300, 372, 444, 516, 588, 660, 732, 804, 876, 948, 1020, 1092, 1164, 1236, 1308, 1380, 1452, 1524, 1596, 1668, 1740, 1812, 1884, 1956, 2028, 2100, 2172, 2244, 2316, 2388, 2460, 2494, 2528, 2562, 2596, 2630};
static const casadi_int casadi_s34[5] = {34, 1, 0, 1, 13};
static const casadi_int casadi_s35[40] = {13, 85, 157, 229, 301, 373, 445, 517, 589, 661, 733, 805, 877, 949, 1021, 1093, 1165, 1237, 1309, 1381, 1453, 1525, 1597, 1669, 1741, 1813, 1885, 1957, 2029, 2101, 2173, 2245, 2317, 2389, 2461, 2495, 2529, 2563, 2597, 2631};
static const casadi_int casadi_s36[5] = {34, 1, 0, 1, 14};
static const casadi_int casadi_s37[40] = {14, 86, 158, 230, 302, 374, 446, 518, 590, 662, 734, 806, 878, 950, 1022, 1094, 1166, 1238, 1310, 1382, 1454, 1526, 1598, 1670, 1742, 1814, 1886, 1958, 2030, 2102, 2174, 2246, 2318, 2390, 2462, 2496, 2530, 2564, 2598, 2632};
static const casadi_int casadi_s38[5] = {34, 1, 0, 1, 15};
static const casadi_int casadi_s39[40] = {15, 87, 159, 231, 303, 375, 447, 519, 591, 663, 735, 807, 879, 951, 1023, 1095, 1167, 1239, 1311, 1383, 1455, 1527, 1599, 1671, 1743, 1815, 1887, 1959, 2031, 2103, 2175, 2247, 2319, 2391, 2463, 2497, 2531, 2565, 2599, 2633};
static const casadi_int casadi_s40[5] = {34, 1, 0, 1, 16};
static const casadi_int casadi_s41[40] = {16, 88, 160, 232, 304, 376, 448, 520, 592, 664, 736, 808, 880, 952, 1024, 1096, 1168, 1240, 1312, 1384, 1456, 1528, 1600, 1672, 1744, 1816, 1888, 1960, 2032, 2104, 2176, 2248, 2320, 2392, 2464, 2498, 2532, 2566, 2600, 2634};
static const casadi_int casadi_s42[5] = {34, 1, 0, 1, 17};
static const casadi_int casadi_s43[40] = {17, 89, 161, 233, 305, 377, 449, 521, 593, 665, 737, 809, 881, 953, 1025, 1097, 1169, 1241, 1313, 1385, 1457, 1529, 1601, 1673, 1745, 1817, 1889, 1961, 2033, 2105, 2177, 2249, 2321, 2393, 2465, 2499, 2533, 2567, 2601, 2635};
static const casadi_int casadi_s44[5] = {34, 1, 0, 1, 18};
static const casadi_int casadi_s45[40] = {18, 90, 162, 234, 306, 378, 450, 522, 594, 666, 738, 810, 882, 954, 1026, 1098, 1170, 1242, 1314, 1386, 1458, 1530, 1602, 1674, 1746, 1818, 1890, 1962, 2034, 2106, 2178, 2250, 2322, 2394, 2466, 2500, 2534, 2568, 2602, 2636};
static const casadi_int casadi_s46[5] = {34, 1, 0, 1, 19};
static const casadi_int casadi_s47[40] = {19, 91, 163, 235, 307, 379, 451, 523, 595, 667, 739, 811, 883, 955, 1027, 1099, 1171, 1243, 1315, 1387, 1459, 1531, 1603, 1675, 1747, 1819, 1891, 1963, 2035, 2107, 2179, 2251, 2323, 2395, 2467, 2501, 2535, 2569, 2603, 2637};
static const casadi_int casadi_s48[5] = {34, 1, 0, 1, 20};
static const casadi_int casadi_s49[40] = {20, 92, 164, 236, 308, 380, 452, 524, 596, 668, 740, 812, 884, 956, 1028, 1100, 1172, 1244, 1316, 1388, 1460, 1532, 1604, 1676, 1748, 1820, 1892, 1964, 2036, 2108, 2180, 2252, 2324, 2396, 2468, 2502, 2536, 2570, 2604, 2638};
static const casadi_int casadi_s50[5] = {34, 1, 0, 1, 21};
static const casadi_int casadi_s51[40] = {21, 93, 165, 237, 309, 381, 453, 525, 597, 669, 741, 813, 885, 957, 1029, 1101, 1173, 1245, 1317, 1389, 1461, 1533, 1605, 1677, 1749, 1821, 1893, 1965, 2037, 2109, 2181, 2253, 2325, 2397, 2469, 2503, 2537, 2571, 2605, 2639};
static const casadi_int casadi_s52[5] = {34, 1, 0, 1, 22};
static const casadi_int casadi_s53[40] = {22, 94, 166, 238, 310, 382, 454, 526, 598, 670, 742, 814, 886, 958, 1030, 1102, 1174, 1246, 1318, 1390, 1462, 1534, 1606, 1678, 1750, 1822, 1894, 1966, 2038, 2110, 2182, 2254, 2326, 2398, 2470, 2504, 2538, 2572, 2606, 2640};
static const casadi_int casadi_s54[5] = {34, 1, 0, 1, 23};
static const casadi_int casadi_s55[40] = {23, 95, 167, 239, 311, 383, 455, 527, 599, 671, 743, 815, 887, 959, 1031, 1103, 1175, 1247, 1319, 1391, 1463, 1535, 1607, 1679, 1751, 1823, 1895, 1967, 2039, 2111, 2183, 2255, 2327, 2399, 2471, 2505, 2539, 2573, 2607, 2641};
static const casadi_int casadi_s56[5] = {34, 1, 0, 1, 24};
static const casadi_int casadi_s57[40] = {24, 96, 168, 240, 312, 384, 456, 528, 600, 672, 744, 816, 888, 960, 1032, 1104, 1176, 1248, 1320, 1392, 1464, 1536, 1608, 1680, 1752, 1824, 1896, 1968, 2040, 2112, 2184, 2256, 2328, 2400, 2472, 2506, 2540, 2574, 2608, 2642};
static const casadi_int casadi_s58[5] = {34, 1, 0, 1, 25};
static const casadi_int casadi_s59[40] = {25, 97, 169, 241, 313, 385, 457, 529, 601, 673, 745, 817, 889, 961, 1033, 1105, 1177, 1249, 1321, 1393, 1465, 1537, 1609, 1681, 1753, 1825, 1897, 1969, 2041, 2113, 2185, 2257, 2329, 2401, 2473, 2507, 2541, 2575, 2609, 2643};
static const casadi_int casadi_s60[5] = {34, 1, 0, 1, 26};
static const casadi_int casadi_s61[40] = {26, 98, 170, 242, 314, 386, 458, 530, 602, 674, 746, 818, 890, 962, 1034, 1106, 1178, 1250, 1322, 1394, 1466, 1538, 1610, 1682, 1754, 1826, 1898, 1970, 2042, 2114, 2186, 2258, 2330, 2402, 2474, 2508, 2542, 2576, 2610, 2644};
static const casadi_int casadi_s62[5] = {34, 1, 0, 1, 27};
static const casadi_int casadi_s63[40] = {27, 99, 171, 243, 315, 387, 459, 531, 603, 675, 747, 819, 891, 963, 1035, 1107, 1179, 1251, 1323, 1395, 1467, 1539, 1611, 1683, 1755, 1827, 1899, 1971, 2043, 2115, 2187, 2259, 2331, 2403, 2475, 2509, 2543, 2577, 2611, 2645};
static const casadi_int casadi_s64[5] = {34, 1, 0, 1, 28};
static const casadi_int casadi_s65[40] = {28, 100, 172, 244, 316, 388, 460, 532, 604, 676, 748, 820, 892, 964, 1036, 1108, 1180, 1252, 1324, 1396, 1468, 1540, 1612, 1684, 1756, 1828, 1900, 1972, 2044, 2116, 2188, 2260, 2332, 2404, 2476, 2510, 2544, 2578, 2612, 2646};
static const casadi_int casadi_s66[5] = {34, 1, 0, 1, 29};
static const casadi_int casadi_s67[40] = {29, 101, 173, 245, 317, 389, 461, 533, 605, 677, 749, 821, 893, 965, 1037, 1109, 1181, 1253, 1325, 1397, 1469, 1541, 1613, 1685, 1757, 1829, 1901, 1973, 2045, 2117, 2189, 2261, 2333, 2405, 2477, 2511, 2545, 2579, 2613, 2647};
static const casadi_int casadi_s68[5] = {34, 1, 0, 1, 30};
static const casadi_int casadi_s69[40] = {30, 102, 174, 246, 318, 390, 462, 534, 606, 678, 750, 822, 894, 966, 1038, 1110, 1182, 1254, 1326, 1398, 1470, 1542, 1614, 1686, 1758, 1830, 1902, 1974, 2046, 2118, 2190, 2262, 2334, 2406, 2478, 2512, 2546, 2580, 2614, 2648};
static const casadi_int casadi_s70[5] = {34, 1, 0, 1, 31};
static const casadi_int casadi_s71[40] = {31, 103, 175, 247, 319, 391, 463, 535, 607, 679, 751, 823, 895, 967, 1039, 1111, 1183, 1255, 1327, 1399, 1471, 1543, 1615, 1687, 1759, 1831, 1903, 1975, 2047, 2119, 2191, 2263, 2335, 2407, 2479, 2513, 2547, 2581, 2615, 2649};
static const casadi_int casadi_s72[5] = {34, 1, 0, 1, 32};
static const casadi_int casadi_s73[40] = {32, 104, 176, 248, 320, 392, 464, 536, 608, 680, 752, 824, 896, 968, 1040, 1112, 1184, 1256, 1328, 1400, 1472, 1544, 1616, 1688, 1760, 1832, 1904, 1976, 2048, 2120, 2192, 2264, 2336, 2408, 2480, 2514, 2548, 2582, 2616, 2650};
static const casadi_int casadi_s74[5] = {34, 1, 0, 1, 33};
static const casadi_int casadi_s75[40] = {33, 105, 177, 249, 321, 393, 465, 537, 609, 681, 753, 825, 897, 969, 1041, 1113, 1185, 1257, 1329, 1401, 1473, 1545, 1617, 1689, 1761, 1833, 1905, 1977, 2049, 2121, 2193, 2265, 2337, 2409, 2481, 2515, 2549, 2583, 2617, 2651};
static const casadi_int casadi_s76[5] = {20, 1, 0, 1, 0};
static const casadi_int casadi_s77[5] = {20, 1, 0, 1, 1};
static const casadi_int casadi_s78[5] = {20, 1, 0, 1, 2};
static const casadi_int casadi_s79[5] = {20, 1, 0, 1, 3};
static const casadi_int casadi_s80[5] = {20, 1, 0, 1, 4};
static const casadi_int casadi_s81[5] = {20, 1, 0, 1, 5};
static const casadi_int casadi_s82[5] = {20, 1, 0, 1, 6};
static const casadi_int casadi_s83[5] = {20, 1, 0, 1, 7};
static const casadi_int casadi_s84[5] = {20, 1, 0, 1, 8};
static const casadi_int casadi_s85[5] = {20, 1, 0, 1, 9};
static const casadi_int casadi_s86[5] = {20, 1, 0, 1, 10};
static const casadi_int casadi_s87[5] = {20, 1, 0, 1, 11};
static const casadi_int casadi_s88[5] = {20, 1, 0, 1, 12};
static const casadi_int casadi_s89[5] = {20, 1, 0, 1, 13};
static const casadi_int casadi_s90[5] = {20, 1, 0, 1, 14};
static const casadi_int casadi_s91[5] = {20, 1, 0, 1, 15};
static const casadi_int casadi_s92[5] = {20, 1, 0, 1, 16};
static const casadi_int casadi_s93[5] = {20, 1, 0, 1, 17};
static const casadi_int casadi_s94[5] = {20, 1, 0, 1, 18};
static const casadi_int casadi_s95[5] = {20, 1, 0, 1, 19};
static const casadi_int casadi_s96[213] = {34, 6, 0, 34, 68, 102, 136, 170, 204, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s97[5] = {6, 1, 0, 1, 0};
static const casadi_int casadi_s98[5] = {6, 1, 0, 1, 1};
static const casadi_int casadi_s99[5] = {6, 1, 0, 1, 2};
static const casadi_int casadi_s100[5] = {6, 1, 0, 1, 3};
static const casadi_int casadi_s101[5] = {6, 1, 0, 1, 4};
static const casadi_int casadi_s102[5] = {6, 1, 0, 1, 5};
static const casadi_int casadi_s103[423] = {34, 12, 0, 34, 68, 102, 136, 170, 204, 238, 272, 306, 340, 374, 408, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s104[5] = {12, 1, 0, 1, 0};
static const casadi_int casadi_s105[5] = {12, 1, 0, 1, 1};
static const casadi_int casadi_s106[5] = {12, 1, 0, 1, 2};
static const casadi_int casadi_s107[5] = {12, 1, 0, 1, 3};
static const casadi_int casadi_s108[5] = {12, 1, 0, 1, 4};
static const casadi_int casadi_s109[5] = {12, 1, 0, 1, 5};
static const casadi_int casadi_s110[5] = {12, 1, 0, 1, 6};
static const casadi_int casadi_s111[5] = {12, 1, 0, 1, 7};
static const casadi_int casadi_s112[5] = {12, 1, 0, 1, 8};
static const casadi_int casadi_s113[5] = {12, 1, 0, 1, 9};
static const casadi_int casadi_s114[5] = {12, 1, 0, 1, 10};
static const casadi_int casadi_s115[5] = {12, 1, 0, 1, 11};
static const casadi_int casadi_s116[2695] = {};
static const casadi_int casadi_s117[2727] = {40, 72, 0, 40, 80, 120, 160, 200, 240, 280, 320, 360, 400, 440, 480, 520, 560, 600, 640, 680, 720, 760, 800, 840, 880, 920, 960, 1000, 1040, 1080, 1120, 1160, 1200, 1240, 1280, 1320, 1360, 1394, 1428, 1462, 1496, 1530, 1564, 1598, 1632, 1666, 1700, 1734, 1768, 1802, 1836, 1870, 1904, 1938, 1972, 2006, 2040, 2074, 2108, 2142, 2176, 2210, 2244, 2278, 2312, 2346, 2380, 2414, 2448, 2482, 2516, 2550, 2584, 2618, 2652, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};

/* b_eq_function:(i0[72],i1[34x34],i2[34],i3[34],i4[34x20],i5[6x34],i6[6],i7[42x34])->(o0[40]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i, j, k;
  casadi_real *rr, *ss, *tt;
  const casadi_real *cs;
  casadi_real *w0=w+34, *w1=w+68, *w2=w+1224, *w3=w+1258, *w4=w+1292, *w5=w+1972, *w6=w+1992, *w7=w+2196, *w8=w+2400, *w9=w+2406, *w10=w+3834, *w11=w+5262, *w12=w+5466, *w13=w+5874, *w14=w+5886, *w15=w+5892;
  /* #0: @0 = zeros(34x1) */
  casadi_clear(w0, 34);
  /* #1: @1 = input[1][0] */
  casadi_copy(arg[1], 1156, w1);
  /* #2: @2 = input[0][0] */
  casadi_copy(arg[0], 34, w2);
  /* #3: @0 = mac(@1,@2,@0) */
  for (i=0, rr=w0; i<1; ++i) for (j=0; j<34; ++j, ++rr) for (k=0, ss=w1+j, tt=w2+i*34; k<34; ++k) *rr += ss[k*34]**tt++;
  /* #4: @3 = input[2][0] */
  casadi_copy(arg[2], 34, w3);
  /* #5: @0 = (@0+@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) += (*cs++);
  /* #6: @3 = input[3][0] */
  casadi_copy(arg[3], 34, w3);
  /* #7: @0 = (@0-@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) -= (*cs++);
  /* #8: @3 = zeros(34x1) */
  casadi_clear(w3, 34);
  /* #9: @4 = input[4][0] */
  casadi_copy(arg[4], 680, w4);
  /* #10: @5 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+34 : 0, 20, w5);
  /* #11: @3 = mac(@4,@5,@3) */
  for (i=0, rr=w3; i<1; ++i) for (j=0; j<34; ++j, ++rr) for (k=0, ss=w4+j, tt=w5+i*20; k<20; ++k) *rr += ss[k*34]**tt++;
  /* #12: @0 = (@0-@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) -= (*cs++);
  /* #13: @3 = zeros(34x1) */
  casadi_clear(w3, 34);
  /* #14: @6 = input[5][0] */
  casadi_copy(arg[5], 204, w6);
  /* #15: @7 = @6' */
  for (i=0, rr=w7, cs=w6; i<34; ++i) for (j=0; j<6; ++j) rr[i+j*34] = *cs++;
  /* #16: @8 = input[0][2] */
  casadi_copy(arg[0] ? arg[0]+54 : 0, 6, w8);
  /* #17: @3 = mac(@7,@8,@3) */
  for (i=0, rr=w3; i<1; ++i) for (j=0; j<34; ++j, ++rr) for (k=0, ss=w7+j, tt=w8+i*6; k<6; ++k) *rr += ss[k*34]**tt++;
  /* #18: @0 = (@0-@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) -= (*cs++);
  /* #19: @3 = zeros(34x1) */
  casadi_clear(w3, 34);
  /* #20: @9 = input[7][0] */
  casadi_copy(arg[7], 1428, w9);
  /* #21: @10 = @9' */
  for (i=0, rr=w10, cs=w9; i<34; ++i) for (j=0; j<42; ++j) rr[i+j*34] = *cs++;
  /* #22: {NULL, @7, @11, NULL, NULL, NULL, NULL} = horzsplit(@10) */
  casadi_copy(w10+204, 204, w7);
  casadi_copy(w10+408, 204, w11);
  /* #23: @12 = horzcat(@7, @11) */
  rr=w12;
  for (i=0, cs=w7; i<204; ++i) *rr++ = *cs++;
  for (i=0, cs=w11; i<204; ++i) *rr++ = *cs++;
  /* #24: @13 = input[0][3] */
  casadi_copy(arg[0] ? arg[0]+60 : 0, 12, w13);
  /* #25: @3 = mac(@12,@13,@3) */
  for (i=0, rr=w3; i<1; ++i) for (j=0; j<34; ++j, ++rr) for (k=0, ss=w12+j, tt=w13+i*12; k<12; ++k) *rr += ss[k*34]**tt++;
  /* #26: @0 = (@0-@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) -= (*cs++);
  /* #27: @8 = zeros(6x1) */
  casadi_clear(w8, 6);
  /* #28: @8 = mac(@6,@2,@8) */
  for (i=0, rr=w8; i<1; ++i) for (j=0; j<6; ++j, ++rr) for (k=0, ss=w6+j, tt=w2+i*34; k<34; ++k) *rr += ss[k*6]**tt++;
  /* #29: @14 = input[6][0] */
  casadi_copy(arg[6], 6, w14);
  /* #30: @8 = (@8+@14) */
  for (i=0, rr=w8, cs=w14; i<6; ++i) (*rr++) += (*cs++);
  /* #31: @15 = vertcat(@0, @8) */
  rr=w15;
  for (i=0, cs=w0; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w8; i<6; ++i) *rr++ = *cs++;
  /* #32: @15 = (-@15) */
  for (i=0, rr=w15, cs=w15; i<40; ++i) *rr++ = (- *cs++ );
  /* #33: output[0][0] = @15 */
  casadi_copy(w15, 40, res[0]);
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void b_eq_function_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void b_eq_function_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void b_eq_function_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void b_eq_function_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int b_eq_function_n_in(void) { return 8;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int b_eq_function_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real b_eq_function_default_in(casadi_int i) {
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* b_eq_function_name_in(casadi_int i) {
  switch (i) {
    case 0: return "i0";
    case 1: return "i1";
    case 2: return "i2";
    case 3: return "i3";
    case 4: return "i4";
    case 5: return "i5";
    case 6: return "i6";
    case 7: return "i7";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* b_eq_function_name_out(casadi_int i) {
  switch (i) {
    case 0: return "o0";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* b_eq_function_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    case 2: return casadi_s2;
    case 3: return casadi_s2;
    case 4: return casadi_s3;
    case 5: return casadi_s4;
    case 6: return casadi_s5;
    case 7: return casadi_s6;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* b_eq_function_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s7;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 11;
  if (sz_res) *sz_res = 8;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 5932;
  return 0;
}

/* A_eq_function:(i0[72],i1[34x34],i2[34],i3[34],i4[34x20],i5[6x34],i6[6],i7[42x34])->(o0[40x72,2652nz]) */
static int casadi_f1(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i, j;
  casadi_real *rr, *ss;
  const casadi_int *cii;
  const casadi_real *cs;
  casadi_real *w0=w+34, *w1=w+2686, *w2=w+2720, w3, w4, *w5=w+3878, *w6=w+3884, *w7=w+4088, *w8=w+4128, *w9=w+4808, *w10=w+5012, *w11=w+6440, *w12=w+7868, *w13=w+8276;
  /* #0: @0 = zeros(72x40,2652nz) */
  casadi_clear(w0, 2652);
  /* #1: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #2: @2 = input[1][0] */
  casadi_copy(arg[1], 1156, w2);
  /* #3: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #4: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #5: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s8, w1, casadi_s2, w, 0);
  /* #6: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #7: @6 = input[5][0] */
  casadi_copy(arg[5], 204, w6);
  /* #8: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s8, w5, casadi_s5, w, 0);
  /* #9: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #10: (@0[0, 72, 144, 216, 288, 360, 432, 504, 576, 648, 720, 792, 864, 936, 1008, 1080, 1152, 1224, 1296, 1368, 1440, 1512, 1584, 1656, 1728, 1800, 1872, 1944, 2016, 2088, 2160, 2232, 2304, 2376, 2448, 2482, 2516, 2550, 2584, 2618] = @7) */
  for (cii=casadi_s9, rr=w0, ss=w7; cii!=casadi_s9+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #11: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #12: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #13: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #14: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s10, w1, casadi_s2, w, 0);
  /* #15: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #16: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s10, w5, casadi_s5, w, 0);
  /* #17: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #18: (@0[1, 73, 145, 217, 289, 361, 433, 505, 577, 649, 721, 793, 865, 937, 1009, 1081, 1153, 1225, 1297, 1369, 1441, 1513, 1585, 1657, 1729, 1801, 1873, 1945, 2017, 2089, 2161, 2233, 2305, 2377, 2449, 2483, 2517, 2551, 2585, 2619] = @7) */
  for (cii=casadi_s11, rr=w0, ss=w7; cii!=casadi_s11+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #19: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #20: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #21: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #22: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s12, w1, casadi_s2, w, 0);
  /* #23: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #24: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s12, w5, casadi_s5, w, 0);
  /* #25: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #26: (@0[2, 74, 146, 218, 290, 362, 434, 506, 578, 650, 722, 794, 866, 938, 1010, 1082, 1154, 1226, 1298, 1370, 1442, 1514, 1586, 1658, 1730, 1802, 1874, 1946, 2018, 2090, 2162, 2234, 2306, 2378, 2450, 2484, 2518, 2552, 2586, 2620] = @7) */
  for (cii=casadi_s13, rr=w0, ss=w7; cii!=casadi_s13+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #27: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #28: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #29: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #30: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s14, w1, casadi_s2, w, 0);
  /* #31: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #32: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s14, w5, casadi_s5, w, 0);
  /* #33: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #34: (@0[3, 75, 147, 219, 291, 363, 435, 507, 579, 651, 723, 795, 867, 939, 1011, 1083, 1155, 1227, 1299, 1371, 1443, 1515, 1587, 1659, 1731, 1803, 1875, 1947, 2019, 2091, 2163, 2235, 2307, 2379, 2451, 2485, 2519, 2553, 2587, 2621] = @7) */
  for (cii=casadi_s15, rr=w0, ss=w7; cii!=casadi_s15+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #35: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #36: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #37: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #38: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s16, w1, casadi_s2, w, 0);
  /* #39: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #40: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s16, w5, casadi_s5, w, 0);
  /* #41: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #42: (@0[4, 76, 148, 220, 292, 364, 436, 508, 580, 652, 724, 796, 868, 940, 1012, 1084, 1156, 1228, 1300, 1372, 1444, 1516, 1588, 1660, 1732, 1804, 1876, 1948, 2020, 2092, 2164, 2236, 2308, 2380, 2452, 2486, 2520, 2554, 2588, 2622] = @7) */
  for (cii=casadi_s17, rr=w0, ss=w7; cii!=casadi_s17+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #43: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #44: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #45: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #46: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s18, w1, casadi_s2, w, 0);
  /* #47: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #48: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s18, w5, casadi_s5, w, 0);
  /* #49: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #50: (@0[5, 77, 149, 221, 293, 365, 437, 509, 581, 653, 725, 797, 869, 941, 1013, 1085, 1157, 1229, 1301, 1373, 1445, 1517, 1589, 1661, 1733, 1805, 1877, 1949, 2021, 2093, 2165, 2237, 2309, 2381, 2453, 2487, 2521, 2555, 2589, 2623] = @7) */
  for (cii=casadi_s19, rr=w0, ss=w7; cii!=casadi_s19+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #51: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #52: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #53: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #54: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s20, w1, casadi_s2, w, 0);
  /* #55: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #56: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s20, w5, casadi_s5, w, 0);
  /* #57: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #58: (@0[6, 78, 150, 222, 294, 366, 438, 510, 582, 654, 726, 798, 870, 942, 1014, 1086, 1158, 1230, 1302, 1374, 1446, 1518, 1590, 1662, 1734, 1806, 1878, 1950, 2022, 2094, 2166, 2238, 2310, 2382, 2454, 2488, 2522, 2556, 2590, 2624] = @7) */
  for (cii=casadi_s21, rr=w0, ss=w7; cii!=casadi_s21+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #59: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #60: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #61: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #62: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s22, w1, casadi_s2, w, 0);
  /* #63: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #64: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s22, w5, casadi_s5, w, 0);
  /* #65: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #66: (@0[7, 79, 151, 223, 295, 367, 439, 511, 583, 655, 727, 799, 871, 943, 1015, 1087, 1159, 1231, 1303, 1375, 1447, 1519, 1591, 1663, 1735, 1807, 1879, 1951, 2023, 2095, 2167, 2239, 2311, 2383, 2455, 2489, 2523, 2557, 2591, 2625] = @7) */
  for (cii=casadi_s23, rr=w0, ss=w7; cii!=casadi_s23+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #67: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #68: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #69: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #70: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s24, w1, casadi_s2, w, 0);
  /* #71: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #72: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s24, w5, casadi_s5, w, 0);
  /* #73: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #74: (@0[8, 80, 152, 224, 296, 368, 440, 512, 584, 656, 728, 800, 872, 944, 1016, 1088, 1160, 1232, 1304, 1376, 1448, 1520, 1592, 1664, 1736, 1808, 1880, 1952, 2024, 2096, 2168, 2240, 2312, 2384, 2456, 2490, 2524, 2558, 2592, 2626] = @7) */
  for (cii=casadi_s25, rr=w0, ss=w7; cii!=casadi_s25+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #75: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #76: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #77: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #78: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s26, w1, casadi_s2, w, 0);
  /* #79: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #80: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s26, w5, casadi_s5, w, 0);
  /* #81: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #82: (@0[9, 81, 153, 225, 297, 369, 441, 513, 585, 657, 729, 801, 873, 945, 1017, 1089, 1161, 1233, 1305, 1377, 1449, 1521, 1593, 1665, 1737, 1809, 1881, 1953, 2025, 2097, 2169, 2241, 2313, 2385, 2457, 2491, 2525, 2559, 2593, 2627] = @7) */
  for (cii=casadi_s27, rr=w0, ss=w7; cii!=casadi_s27+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #83: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #84: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #85: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #86: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s28, w1, casadi_s2, w, 0);
  /* #87: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #88: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s28, w5, casadi_s5, w, 0);
  /* #89: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #90: (@0[10, 82, 154, 226, 298, 370, 442, 514, 586, 658, 730, 802, 874, 946, 1018, 1090, 1162, 1234, 1306, 1378, 1450, 1522, 1594, 1666, 1738, 1810, 1882, 1954, 2026, 2098, 2170, 2242, 2314, 2386, 2458, 2492, 2526, 2560, 2594, 2628] = @7) */
  for (cii=casadi_s29, rr=w0, ss=w7; cii!=casadi_s29+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #91: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #92: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #93: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #94: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s30, w1, casadi_s2, w, 0);
  /* #95: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #96: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s30, w5, casadi_s5, w, 0);
  /* #97: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #98: (@0[11, 83, 155, 227, 299, 371, 443, 515, 587, 659, 731, 803, 875, 947, 1019, 1091, 1163, 1235, 1307, 1379, 1451, 1523, 1595, 1667, 1739, 1811, 1883, 1955, 2027, 2099, 2171, 2243, 2315, 2387, 2459, 2493, 2527, 2561, 2595, 2629] = @7) */
  for (cii=casadi_s31, rr=w0, ss=w7; cii!=casadi_s31+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #99: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #100: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #101: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #102: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s32, w1, casadi_s2, w, 0);
  /* #103: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #104: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s32, w5, casadi_s5, w, 0);
  /* #105: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #106: (@0[12, 84, 156, 228, 300, 372, 444, 516, 588, 660, 732, 804, 876, 948, 1020, 1092, 1164, 1236, 1308, 1380, 1452, 1524, 1596, 1668, 1740, 1812, 1884, 1956, 2028, 2100, 2172, 2244, 2316, 2388, 2460, 2494, 2528, 2562, 2596, 2630] = @7) */
  for (cii=casadi_s33, rr=w0, ss=w7; cii!=casadi_s33+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #107: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #108: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #109: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #110: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s34, w1, casadi_s2, w, 0);
  /* #111: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #112: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s34, w5, casadi_s5, w, 0);
  /* #113: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #114: (@0[13, 85, 157, 229, 301, 373, 445, 517, 589, 661, 733, 805, 877, 949, 1021, 1093, 1165, 1237, 1309, 1381, 1453, 1525, 1597, 1669, 1741, 1813, 1885, 1957, 2029, 2101, 2173, 2245, 2317, 2389, 2461, 2495, 2529, 2563, 2597, 2631] = @7) */
  for (cii=casadi_s35, rr=w0, ss=w7; cii!=casadi_s35+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #115: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #116: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #117: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #118: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s36, w1, casadi_s2, w, 0);
  /* #119: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #120: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s36, w5, casadi_s5, w, 0);
  /* #121: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #122: (@0[14, 86, 158, 230, 302, 374, 446, 518, 590, 662, 734, 806, 878, 950, 1022, 1094, 1166, 1238, 1310, 1382, 1454, 1526, 1598, 1670, 1742, 1814, 1886, 1958, 2030, 2102, 2174, 2246, 2318, 2390, 2462, 2496, 2530, 2564, 2598, 2632] = @7) */
  for (cii=casadi_s37, rr=w0, ss=w7; cii!=casadi_s37+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #123: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #124: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #125: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #126: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s38, w1, casadi_s2, w, 0);
  /* #127: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #128: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s38, w5, casadi_s5, w, 0);
  /* #129: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #130: (@0[15, 87, 159, 231, 303, 375, 447, 519, 591, 663, 735, 807, 879, 951, 1023, 1095, 1167, 1239, 1311, 1383, 1455, 1527, 1599, 1671, 1743, 1815, 1887, 1959, 2031, 2103, 2175, 2247, 2319, 2391, 2463, 2497, 2531, 2565, 2599, 2633] = @7) */
  for (cii=casadi_s39, rr=w0, ss=w7; cii!=casadi_s39+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #131: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #132: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #133: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #134: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s40, w1, casadi_s2, w, 0);
  /* #135: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #136: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s40, w5, casadi_s5, w, 0);
  /* #137: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #138: (@0[16, 88, 160, 232, 304, 376, 448, 520, 592, 664, 736, 808, 880, 952, 1024, 1096, 1168, 1240, 1312, 1384, 1456, 1528, 1600, 1672, 1744, 1816, 1888, 1960, 2032, 2104, 2176, 2248, 2320, 2392, 2464, 2498, 2532, 2566, 2600, 2634] = @7) */
  for (cii=casadi_s41, rr=w0, ss=w7; cii!=casadi_s41+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #139: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #140: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #141: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #142: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s42, w1, casadi_s2, w, 0);
  /* #143: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #144: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s42, w5, casadi_s5, w, 0);
  /* #145: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #146: (@0[17, 89, 161, 233, 305, 377, 449, 521, 593, 665, 737, 809, 881, 953, 1025, 1097, 1169, 1241, 1313, 1385, 1457, 1529, 1601, 1673, 1745, 1817, 1889, 1961, 2033, 2105, 2177, 2249, 2321, 2393, 2465, 2499, 2533, 2567, 2601, 2635] = @7) */
  for (cii=casadi_s43, rr=w0, ss=w7; cii!=casadi_s43+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #147: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #148: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #149: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #150: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s44, w1, casadi_s2, w, 0);
  /* #151: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #152: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s44, w5, casadi_s5, w, 0);
  /* #153: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #154: (@0[18, 90, 162, 234, 306, 378, 450, 522, 594, 666, 738, 810, 882, 954, 1026, 1098, 1170, 1242, 1314, 1386, 1458, 1530, 1602, 1674, 1746, 1818, 1890, 1962, 2034, 2106, 2178, 2250, 2322, 2394, 2466, 2500, 2534, 2568, 2602, 2636] = @7) */
  for (cii=casadi_s45, rr=w0, ss=w7; cii!=casadi_s45+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #155: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #156: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #157: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #158: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s46, w1, casadi_s2, w, 0);
  /* #159: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #160: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s46, w5, casadi_s5, w, 0);
  /* #161: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #162: (@0[19, 91, 163, 235, 307, 379, 451, 523, 595, 667, 739, 811, 883, 955, 1027, 1099, 1171, 1243, 1315, 1387, 1459, 1531, 1603, 1675, 1747, 1819, 1891, 1963, 2035, 2107, 2179, 2251, 2323, 2395, 2467, 2501, 2535, 2569, 2603, 2637] = @7) */
  for (cii=casadi_s47, rr=w0, ss=w7; cii!=casadi_s47+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #163: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #164: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #165: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #166: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s48, w1, casadi_s2, w, 0);
  /* #167: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #168: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s48, w5, casadi_s5, w, 0);
  /* #169: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #170: (@0[20, 92, 164, 236, 308, 380, 452, 524, 596, 668, 740, 812, 884, 956, 1028, 1100, 1172, 1244, 1316, 1388, 1460, 1532, 1604, 1676, 1748, 1820, 1892, 1964, 2036, 2108, 2180, 2252, 2324, 2396, 2468, 2502, 2536, 2570, 2604, 2638] = @7) */
  for (cii=casadi_s49, rr=w0, ss=w7; cii!=casadi_s49+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #171: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #172: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #173: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #174: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s50, w1, casadi_s2, w, 0);
  /* #175: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #176: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s50, w5, casadi_s5, w, 0);
  /* #177: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #178: (@0[21, 93, 165, 237, 309, 381, 453, 525, 597, 669, 741, 813, 885, 957, 1029, 1101, 1173, 1245, 1317, 1389, 1461, 1533, 1605, 1677, 1749, 1821, 1893, 1965, 2037, 2109, 2181, 2253, 2325, 2397, 2469, 2503, 2537, 2571, 2605, 2639] = @7) */
  for (cii=casadi_s51, rr=w0, ss=w7; cii!=casadi_s51+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #179: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #180: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #181: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #182: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s52, w1, casadi_s2, w, 0);
  /* #183: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #184: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s52, w5, casadi_s5, w, 0);
  /* #185: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #186: (@0[22, 94, 166, 238, 310, 382, 454, 526, 598, 670, 742, 814, 886, 958, 1030, 1102, 1174, 1246, 1318, 1390, 1462, 1534, 1606, 1678, 1750, 1822, 1894, 1966, 2038, 2110, 2182, 2254, 2326, 2398, 2470, 2504, 2538, 2572, 2606, 2640] = @7) */
  for (cii=casadi_s53, rr=w0, ss=w7; cii!=casadi_s53+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #187: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #188: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #189: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #190: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s54, w1, casadi_s2, w, 0);
  /* #191: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #192: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s54, w5, casadi_s5, w, 0);
  /* #193: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #194: (@0[23, 95, 167, 239, 311, 383, 455, 527, 599, 671, 743, 815, 887, 959, 1031, 1103, 1175, 1247, 1319, 1391, 1463, 1535, 1607, 1679, 1751, 1823, 1895, 1967, 2039, 2111, 2183, 2255, 2327, 2399, 2471, 2505, 2539, 2573, 2607, 2641] = @7) */
  for (cii=casadi_s55, rr=w0, ss=w7; cii!=casadi_s55+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #195: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #196: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #197: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #198: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s56, w1, casadi_s2, w, 0);
  /* #199: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #200: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s56, w5, casadi_s5, w, 0);
  /* #201: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #202: (@0[24, 96, 168, 240, 312, 384, 456, 528, 600, 672, 744, 816, 888, 960, 1032, 1104, 1176, 1248, 1320, 1392, 1464, 1536, 1608, 1680, 1752, 1824, 1896, 1968, 2040, 2112, 2184, 2256, 2328, 2400, 2472, 2506, 2540, 2574, 2608, 2642] = @7) */
  for (cii=casadi_s57, rr=w0, ss=w7; cii!=casadi_s57+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #203: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #204: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #205: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #206: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s58, w1, casadi_s2, w, 0);
  /* #207: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #208: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s58, w5, casadi_s5, w, 0);
  /* #209: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #210: (@0[25, 97, 169, 241, 313, 385, 457, 529, 601, 673, 745, 817, 889, 961, 1033, 1105, 1177, 1249, 1321, 1393, 1465, 1537, 1609, 1681, 1753, 1825, 1897, 1969, 2041, 2113, 2185, 2257, 2329, 2401, 2473, 2507, 2541, 2575, 2609, 2643] = @7) */
  for (cii=casadi_s59, rr=w0, ss=w7; cii!=casadi_s59+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #211: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #212: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #213: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #214: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s60, w1, casadi_s2, w, 0);
  /* #215: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #216: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s60, w5, casadi_s5, w, 0);
  /* #217: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #218: (@0[26, 98, 170, 242, 314, 386, 458, 530, 602, 674, 746, 818, 890, 962, 1034, 1106, 1178, 1250, 1322, 1394, 1466, 1538, 1610, 1682, 1754, 1826, 1898, 1970, 2042, 2114, 2186, 2258, 2330, 2402, 2474, 2508, 2542, 2576, 2610, 2644] = @7) */
  for (cii=casadi_s61, rr=w0, ss=w7; cii!=casadi_s61+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #219: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #220: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #221: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #222: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s62, w1, casadi_s2, w, 0);
  /* #223: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #224: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s62, w5, casadi_s5, w, 0);
  /* #225: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #226: (@0[27, 99, 171, 243, 315, 387, 459, 531, 603, 675, 747, 819, 891, 963, 1035, 1107, 1179, 1251, 1323, 1395, 1467, 1539, 1611, 1683, 1755, 1827, 1899, 1971, 2043, 2115, 2187, 2259, 2331, 2403, 2475, 2509, 2543, 2577, 2611, 2645] = @7) */
  for (cii=casadi_s63, rr=w0, ss=w7; cii!=casadi_s63+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #227: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #228: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #229: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #230: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s64, w1, casadi_s2, w, 0);
  /* #231: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #232: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s64, w5, casadi_s5, w, 0);
  /* #233: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #234: (@0[28, 100, 172, 244, 316, 388, 460, 532, 604, 676, 748, 820, 892, 964, 1036, 1108, 1180, 1252, 1324, 1396, 1468, 1540, 1612, 1684, 1756, 1828, 1900, 1972, 2044, 2116, 2188, 2260, 2332, 2404, 2476, 2510, 2544, 2578, 2612, 2646] = @7) */
  for (cii=casadi_s65, rr=w0, ss=w7; cii!=casadi_s65+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #235: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #236: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #237: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #238: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s66, w1, casadi_s2, w, 0);
  /* #239: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #240: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s66, w5, casadi_s5, w, 0);
  /* #241: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #242: (@0[29, 101, 173, 245, 317, 389, 461, 533, 605, 677, 749, 821, 893, 965, 1037, 1109, 1181, 1253, 1325, 1397, 1469, 1541, 1613, 1685, 1757, 1829, 1901, 1973, 2045, 2117, 2189, 2261, 2333, 2405, 2477, 2511, 2545, 2579, 2613, 2647] = @7) */
  for (cii=casadi_s67, rr=w0, ss=w7; cii!=casadi_s67+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #243: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #244: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #245: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #246: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s68, w1, casadi_s2, w, 0);
  /* #247: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #248: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s68, w5, casadi_s5, w, 0);
  /* #249: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #250: (@0[30, 102, 174, 246, 318, 390, 462, 534, 606, 678, 750, 822, 894, 966, 1038, 1110, 1182, 1254, 1326, 1398, 1470, 1542, 1614, 1686, 1758, 1830, 1902, 1974, 2046, 2118, 2190, 2262, 2334, 2406, 2478, 2512, 2546, 2580, 2614, 2648] = @7) */
  for (cii=casadi_s69, rr=w0, ss=w7; cii!=casadi_s69+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #251: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #252: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #253: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #254: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s70, w1, casadi_s2, w, 0);
  /* #255: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #256: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s70, w5, casadi_s5, w, 0);
  /* #257: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #258: (@0[31, 103, 175, 247, 319, 391, 463, 535, 607, 679, 751, 823, 895, 967, 1039, 1111, 1183, 1255, 1327, 1399, 1471, 1543, 1615, 1687, 1759, 1831, 1903, 1975, 2047, 2119, 2191, 2263, 2335, 2407, 2479, 2513, 2547, 2581, 2615, 2649] = @7) */
  for (cii=casadi_s71, rr=w0, ss=w7; cii!=casadi_s71+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #259: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #260: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #261: {@4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #262: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s72, w1, casadi_s2, w, 0);
  /* #263: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #264: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s72, w5, casadi_s5, w, 0);
  /* #265: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #266: (@0[32, 104, 176, 248, 320, 392, 464, 536, 608, 680, 752, 824, 896, 968, 1040, 1112, 1184, 1256, 1328, 1400, 1472, 1544, 1616, 1688, 1760, 1832, 1904, 1976, 2048, 2120, 2192, 2264, 2336, 2408, 2480, 2514, 2548, 2582, 2616, 2650] = @7) */
  for (cii=casadi_s73, rr=w0, ss=w7; cii!=casadi_s73+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #267: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #268: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #269: {@3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #270: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s74, w1, casadi_s2, w, 0);
  /* #271: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #272: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s74, w5, casadi_s5, w, 0);
  /* #273: @7 = vertcat(@1, @5) */
  rr=w7;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  /* #274: (@0[33, 105, 177, 249, 321, 393, 465, 537, 609, 681, 753, 825, 897, 969, 1041, 1113, 1185, 1257, 1329, 1401, 1473, 1545, 1617, 1689, 1761, 1833, 1905, 1977, 2049, 2121, 2193, 2265, 2337, 2409, 2481, 2515, 2549, 2583, 2617, 2651] = @7) */
  for (cii=casadi_s75, rr=w0, ss=w7; cii!=casadi_s75+40; ++cii, ++ss) rr[*cii] = *ss;
  /* #275: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #276: @8 = input[4][0] */
  casadi_copy(arg[4], 680, w8);
  /* #277: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #278: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #279: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s76, w1, casadi_s2, w, 0);
  /* #280: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #281: (@0[34:2482:72] = @1) */
  for (rr=w0+34, ss=w1; rr!=w0+2482; rr+=72) *rr = *ss++;
  /* #282: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #283: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #284: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #285: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s77, w1, casadi_s2, w, 0);
  /* #286: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #287: (@0[35:2483:72] = @1) */
  for (rr=w0+35, ss=w1; rr!=w0+2483; rr+=72) *rr = *ss++;
  /* #288: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #289: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #290: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #291: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s78, w1, casadi_s2, w, 0);
  /* #292: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #293: (@0[36:2484:72] = @1) */
  for (rr=w0+36, ss=w1; rr!=w0+2484; rr+=72) *rr = *ss++;
  /* #294: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #295: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #296: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #297: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s79, w1, casadi_s2, w, 0);
  /* #298: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #299: (@0[37:2485:72] = @1) */
  for (rr=w0+37, ss=w1; rr!=w0+2485; rr+=72) *rr = *ss++;
  /* #300: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #301: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #302: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #303: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s80, w1, casadi_s2, w, 0);
  /* #304: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #305: (@0[38:2486:72] = @1) */
  for (rr=w0+38, ss=w1; rr!=w0+2486; rr+=72) *rr = *ss++;
  /* #306: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #307: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #308: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #309: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s81, w1, casadi_s2, w, 0);
  /* #310: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #311: (@0[39:2487:72] = @1) */
  for (rr=w0+39, ss=w1; rr!=w0+2487; rr+=72) *rr = *ss++;
  /* #312: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #313: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #314: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #315: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s82, w1, casadi_s2, w, 0);
  /* #316: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #317: (@0[40:2488:72] = @1) */
  for (rr=w0+40, ss=w1; rr!=w0+2488; rr+=72) *rr = *ss++;
  /* #318: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #319: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #320: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #321: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s83, w1, casadi_s2, w, 0);
  /* #322: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #323: (@0[41:2489:72] = @1) */
  for (rr=w0+41, ss=w1; rr!=w0+2489; rr+=72) *rr = *ss++;
  /* #324: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #325: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #326: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #327: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s84, w1, casadi_s2, w, 0);
  /* #328: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #329: (@0[42:2490:72] = @1) */
  for (rr=w0+42, ss=w1; rr!=w0+2490; rr+=72) *rr = *ss++;
  /* #330: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #331: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #332: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #333: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s85, w1, casadi_s2, w, 0);
  /* #334: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #335: (@0[43:2491:72] = @1) */
  for (rr=w0+43, ss=w1; rr!=w0+2491; rr+=72) *rr = *ss++;
  /* #336: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #337: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #338: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #339: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s86, w1, casadi_s2, w, 0);
  /* #340: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #341: (@0[44:2492:72] = @1) */
  for (rr=w0+44, ss=w1; rr!=w0+2492; rr+=72) *rr = *ss++;
  /* #342: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #343: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #344: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #345: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s87, w1, casadi_s2, w, 0);
  /* #346: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #347: (@0[45:2493:72] = @1) */
  for (rr=w0+45, ss=w1; rr!=w0+2493; rr+=72) *rr = *ss++;
  /* #348: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #349: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #350: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #351: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s88, w1, casadi_s2, w, 0);
  /* #352: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #353: (@0[46:2494:72] = @1) */
  for (rr=w0+46, ss=w1; rr!=w0+2494; rr+=72) *rr = *ss++;
  /* #354: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #355: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #356: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #357: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s89, w1, casadi_s2, w, 0);
  /* #358: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #359: (@0[47:2495:72] = @1) */
  for (rr=w0+47, ss=w1; rr!=w0+2495; rr+=72) *rr = *ss++;
  /* #360: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #361: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #362: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #363: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s90, w1, casadi_s2, w, 0);
  /* #364: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #365: (@0[48:2496:72] = @1) */
  for (rr=w0+48, ss=w1; rr!=w0+2496; rr+=72) *rr = *ss++;
  /* #366: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #367: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #368: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #369: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s91, w1, casadi_s2, w, 0);
  /* #370: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #371: (@0[49:2497:72] = @1) */
  for (rr=w0+49, ss=w1; rr!=w0+2497; rr+=72) *rr = *ss++;
  /* #372: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #373: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #374: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #375: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s92, w1, casadi_s2, w, 0);
  /* #376: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #377: (@0[50:2498:72] = @1) */
  for (rr=w0+50, ss=w1; rr!=w0+2498; rr+=72) *rr = *ss++;
  /* #378: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #379: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #380: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #381: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s93, w1, casadi_s2, w, 0);
  /* #382: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #383: (@0[51:2499:72] = @1) */
  for (rr=w0+51, ss=w1; rr!=w0+2499; rr+=72) *rr = *ss++;
  /* #384: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #385: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #386: {NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #387: @1 = mac(@8,@4,@1) */
  casadi_mtimes(w8, casadi_s3, (&w4), casadi_s94, w1, casadi_s2, w, 0);
  /* #388: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #389: (@0[52:2500:72] = @1) */
  for (rr=w0+52, ss=w1; rr!=w0+2500; rr+=72) *rr = *ss++;
  /* #390: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #391: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #392: {NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #393: @1 = mac(@8,@3,@1) */
  casadi_mtimes(w8, casadi_s3, (&w3), casadi_s95, w1, casadi_s2, w, 0);
  /* #394: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #395: (@0[53:2501:72] = @1) */
  for (rr=w0+53, ss=w1; rr!=w0+2501; rr+=72) *rr = *ss++;
  /* #396: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #397: @9 = @6' */
  for (i=0, rr=w9, cs=w6; i<34; ++i) for (j=0; j<6; ++j) rr[i+j*34] = *cs++;
  /* #398: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #399: {NULL, NULL, @4, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #400: @1 = mac(@9,@4,@1) */
  casadi_mtimes(w9, casadi_s96, (&w4), casadi_s97, w1, casadi_s2, w, 0);
  /* #401: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #402: (@0[54:2502:72] = @1) */
  for (rr=w0+54, ss=w1; rr!=w0+2502; rr+=72) *rr = *ss++;
  /* #403: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #404: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #405: {NULL, NULL, @3, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #406: @1 = mac(@9,@3,@1) */
  casadi_mtimes(w9, casadi_s96, (&w3), casadi_s98, w1, casadi_s2, w, 0);
  /* #407: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #408: (@0[55:2503:72] = @1) */
  for (rr=w0+55, ss=w1; rr!=w0+2503; rr+=72) *rr = *ss++;
  /* #409: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #410: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #411: {NULL, NULL, @4, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #412: @1 = mac(@9,@4,@1) */
  casadi_mtimes(w9, casadi_s96, (&w4), casadi_s99, w1, casadi_s2, w, 0);
  /* #413: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #414: (@0[56:2504:72] = @1) */
  for (rr=w0+56, ss=w1; rr!=w0+2504; rr+=72) *rr = *ss++;
  /* #415: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #416: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #417: {NULL, NULL, @3, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #418: @1 = mac(@9,@3,@1) */
  casadi_mtimes(w9, casadi_s96, (&w3), casadi_s100, w1, casadi_s2, w, 0);
  /* #419: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #420: (@0[57:2505:72] = @1) */
  for (rr=w0+57, ss=w1; rr!=w0+2505; rr+=72) *rr = *ss++;
  /* #421: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #422: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #423: {NULL, NULL, @4, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #424: @1 = mac(@9,@4,@1) */
  casadi_mtimes(w9, casadi_s96, (&w4), casadi_s101, w1, casadi_s2, w, 0);
  /* #425: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #426: (@0[58:2506:72] = @1) */
  for (rr=w0+58, ss=w1; rr!=w0+2506; rr+=72) *rr = *ss++;
  /* #427: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #428: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #429: {NULL, NULL, @3, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #430: @1 = mac(@9,@3,@1) */
  casadi_mtimes(w9, casadi_s96, (&w3), casadi_s102, w1, casadi_s2, w, 0);
  /* #431: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #432: (@0[59:2507:72] = @1) */
  for (rr=w0+59, ss=w1; rr!=w0+2507; rr+=72) *rr = *ss++;
  /* #433: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #434: @10 = input[7][0] */
  casadi_copy(arg[7], 1428, w10);
  /* #435: @11 = @10' */
  for (i=0, rr=w11, cs=w10; i<34; ++i) for (j=0; j<42; ++j) rr[i+j*34] = *cs++;
  /* #436: {NULL, @9, @6, NULL, NULL, NULL, NULL} = horzsplit(@11) */
  casadi_copy(w11+204, 204, w9);
  casadi_copy(w11+408, 204, w6);
  /* #437: @12 = horzcat(@9, @6) */
  rr=w12;
  for (i=0, cs=w9; i<204; ++i) *rr++ = *cs++;
  for (i=0, cs=w6; i<204; ++i) *rr++ = *cs++;
  /* #438: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #439: {NULL, NULL, NULL, @4} = vertsplit(@3) */
  w4 = w3;
  /* #440: @1 = mac(@12,@4,@1) */
  casadi_mtimes(w12, casadi_s103, (&w4), casadi_s104, w1, casadi_s2, w, 0);
  /* #441: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #442: (@0[60:2508:72] = @1) */
  for (rr=w0+60, ss=w1; rr!=w0+2508; rr+=72) *rr = *ss++;
  /* #443: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #444: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #445: {NULL, NULL, NULL, @3} = vertsplit(@4) */
  w3 = w4;
  /* #446: @1 = mac(@12,@3,@1) */
  casadi_mtimes(w12, casadi_s103, (&w3), casadi_s105, w1, casadi_s2, w, 0);
  /* #447: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #448: (@0[61:2509:72] = @1) */
  for (rr=w0+61, ss=w1; rr!=w0+2509; rr+=72) *rr = *ss++;
  /* #449: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #450: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #451: {NULL, NULL, NULL, @4} = vertsplit(@3) */
  w4 = w3;
  /* #452: @1 = mac(@12,@4,@1) */
  casadi_mtimes(w12, casadi_s103, (&w4), casadi_s106, w1, casadi_s2, w, 0);
  /* #453: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #454: (@0[62:2510:72] = @1) */
  for (rr=w0+62, ss=w1; rr!=w0+2510; rr+=72) *rr = *ss++;
  /* #455: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #456: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #457: {NULL, NULL, NULL, @3} = vertsplit(@4) */
  w3 = w4;
  /* #458: @1 = mac(@12,@3,@1) */
  casadi_mtimes(w12, casadi_s103, (&w3), casadi_s107, w1, casadi_s2, w, 0);
  /* #459: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #460: (@0[63:2511:72] = @1) */
  for (rr=w0+63, ss=w1; rr!=w0+2511; rr+=72) *rr = *ss++;
  /* #461: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #462: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #463: {NULL, NULL, NULL, @4} = vertsplit(@3) */
  w4 = w3;
  /* #464: @1 = mac(@12,@4,@1) */
  casadi_mtimes(w12, casadi_s103, (&w4), casadi_s108, w1, casadi_s2, w, 0);
  /* #465: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #466: (@0[64:2512:72] = @1) */
  for (rr=w0+64, ss=w1; rr!=w0+2512; rr+=72) *rr = *ss++;
  /* #467: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #468: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #469: {NULL, NULL, NULL, @3} = vertsplit(@4) */
  w3 = w4;
  /* #470: @1 = mac(@12,@3,@1) */
  casadi_mtimes(w12, casadi_s103, (&w3), casadi_s109, w1, casadi_s2, w, 0);
  /* #471: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #472: (@0[65:2513:72] = @1) */
  for (rr=w0+65, ss=w1; rr!=w0+2513; rr+=72) *rr = *ss++;
  /* #473: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #474: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #475: {NULL, NULL, NULL, @4} = vertsplit(@3) */
  w4 = w3;
  /* #476: @1 = mac(@12,@4,@1) */
  casadi_mtimes(w12, casadi_s103, (&w4), casadi_s110, w1, casadi_s2, w, 0);
  /* #477: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #478: (@0[66:2514:72] = @1) */
  for (rr=w0+66, ss=w1; rr!=w0+2514; rr+=72) *rr = *ss++;
  /* #479: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #480: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #481: {NULL, NULL, NULL, @3} = vertsplit(@4) */
  w3 = w4;
  /* #482: @1 = mac(@12,@3,@1) */
  casadi_mtimes(w12, casadi_s103, (&w3), casadi_s111, w1, casadi_s2, w, 0);
  /* #483: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #484: (@0[67:2515:72] = @1) */
  for (rr=w0+67, ss=w1; rr!=w0+2515; rr+=72) *rr = *ss++;
  /* #485: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #486: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #487: {NULL, NULL, NULL, @4} = vertsplit(@3) */
  w4 = w3;
  /* #488: @1 = mac(@12,@4,@1) */
  casadi_mtimes(w12, casadi_s103, (&w4), casadi_s112, w1, casadi_s2, w, 0);
  /* #489: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #490: (@0[68:2516:72] = @1) */
  for (rr=w0+68, ss=w1; rr!=w0+2516; rr+=72) *rr = *ss++;
  /* #491: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #492: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #493: {NULL, NULL, NULL, @3} = vertsplit(@4) */
  w3 = w4;
  /* #494: @1 = mac(@12,@3,@1) */
  casadi_mtimes(w12, casadi_s103, (&w3), casadi_s113, w1, casadi_s2, w, 0);
  /* #495: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #496: (@0[69:2517:72] = @1) */
  for (rr=w0+69, ss=w1; rr!=w0+2517; rr+=72) *rr = *ss++;
  /* #497: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #498: @3 = ones(72x1,1nz) */
  w3 = 1.;
  /* #499: {NULL, NULL, NULL, @4} = vertsplit(@3) */
  w4 = w3;
  /* #500: @1 = mac(@12,@4,@1) */
  casadi_mtimes(w12, casadi_s103, (&w4), casadi_s114, w1, casadi_s2, w, 0);
  /* #501: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #502: (@0[70:2518:72] = @1) */
  for (rr=w0+70, ss=w1; rr!=w0+2518; rr+=72) *rr = *ss++;
  /* #503: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #504: @4 = ones(72x1,1nz) */
  w4 = 1.;
  /* #505: {NULL, NULL, NULL, @3} = vertsplit(@4) */
  w3 = w4;
  /* #506: @1 = mac(@12,@3,@1) */
  casadi_mtimes(w12, casadi_s103, (&w3), casadi_s115, w1, casadi_s2, w, 0);
  /* #507: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #508: (@0[71:2519:72] = @1) */
  for (rr=w0+71, ss=w1; rr!=w0+2519; rr+=72) *rr = *ss++;
  /* #509: @13 = @0' */
  casadi_trans(w0,casadi_s116, w13, casadi_s117, iw);
  /* #510: output[0][0] = @13 */
  casadi_copy(w13, 2652, res[0]);
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f1(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void A_eq_function_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void A_eq_function_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void A_eq_function_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void A_eq_function_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int A_eq_function_n_in(void) { return 8;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int A_eq_function_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real A_eq_function_default_in(casadi_int i) {
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* A_eq_function_name_in(casadi_int i) {
  switch (i) {
    case 0: return "i0";
    case 1: return "i1";
    case 2: return "i2";
    case 3: return "i3";
    case 4: return "i4";
    case 5: return "i5";
    case 6: return "i6";
    case 7: return "i7";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* A_eq_function_name_out(casadi_int i) {
  switch (i) {
    case 0: return "o0";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* A_eq_function_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    case 2: return casadi_s2;
    case 3: return casadi_s2;
    case 4: return casadi_s3;
    case 5: return casadi_s4;
    case 6: return casadi_s5;
    case 7: return casadi_s6;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* A_eq_function_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s117;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 11;
  if (sz_res) *sz_res = 8;
  if (sz_iw) *sz_iw = 73;
  if (sz_w) *sz_w = 10928;
  return 0;
}


