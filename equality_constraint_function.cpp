/* This file was automatically generated by CasADi 3.6.4.
 *  It consists of: 
 *   1) content generated by CasADi runtime: not copyrighted
 *   2) template code copied from CasADi source: permissively licensed (MIT-0)
 *   3) user code: owned by the user
 *
 */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) equality_constraint_function_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_clear CASADI_PREFIX(clear)
#define casadi_copy CASADI_PREFIX(copy)
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_f1 CASADI_PREFIX(f1)
#define casadi_fill CASADI_PREFIX(fill)
#define casadi_mtimes CASADI_PREFIX(mtimes)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s10 CASADI_PREFIX(s10)
#define casadi_s100 CASADI_PREFIX(s100)
#define casadi_s101 CASADI_PREFIX(s101)
#define casadi_s102 CASADI_PREFIX(s102)
#define casadi_s103 CASADI_PREFIX(s103)
#define casadi_s104 CASADI_PREFIX(s104)
#define casadi_s105 CASADI_PREFIX(s105)
#define casadi_s106 CASADI_PREFIX(s106)
#define casadi_s107 CASADI_PREFIX(s107)
#define casadi_s108 CASADI_PREFIX(s108)
#define casadi_s109 CASADI_PREFIX(s109)
#define casadi_s11 CASADI_PREFIX(s11)
#define casadi_s110 CASADI_PREFIX(s110)
#define casadi_s111 CASADI_PREFIX(s111)
#define casadi_s112 CASADI_PREFIX(s112)
#define casadi_s113 CASADI_PREFIX(s113)
#define casadi_s114 CASADI_PREFIX(s114)
#define casadi_s115 CASADI_PREFIX(s115)
#define casadi_s116 CASADI_PREFIX(s116)
#define casadi_s117 CASADI_PREFIX(s117)
#define casadi_s118 CASADI_PREFIX(s118)
#define casadi_s119 CASADI_PREFIX(s119)
#define casadi_s12 CASADI_PREFIX(s12)
#define casadi_s13 CASADI_PREFIX(s13)
#define casadi_s14 CASADI_PREFIX(s14)
#define casadi_s15 CASADI_PREFIX(s15)
#define casadi_s16 CASADI_PREFIX(s16)
#define casadi_s17 CASADI_PREFIX(s17)
#define casadi_s18 CASADI_PREFIX(s18)
#define casadi_s19 CASADI_PREFIX(s19)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_s20 CASADI_PREFIX(s20)
#define casadi_s21 CASADI_PREFIX(s21)
#define casadi_s22 CASADI_PREFIX(s22)
#define casadi_s23 CASADI_PREFIX(s23)
#define casadi_s24 CASADI_PREFIX(s24)
#define casadi_s25 CASADI_PREFIX(s25)
#define casadi_s26 CASADI_PREFIX(s26)
#define casadi_s27 CASADI_PREFIX(s27)
#define casadi_s28 CASADI_PREFIX(s28)
#define casadi_s29 CASADI_PREFIX(s29)
#define casadi_s3 CASADI_PREFIX(s3)
#define casadi_s30 CASADI_PREFIX(s30)
#define casadi_s31 CASADI_PREFIX(s31)
#define casadi_s32 CASADI_PREFIX(s32)
#define casadi_s33 CASADI_PREFIX(s33)
#define casadi_s34 CASADI_PREFIX(s34)
#define casadi_s35 CASADI_PREFIX(s35)
#define casadi_s36 CASADI_PREFIX(s36)
#define casadi_s37 CASADI_PREFIX(s37)
#define casadi_s38 CASADI_PREFIX(s38)
#define casadi_s39 CASADI_PREFIX(s39)
#define casadi_s4 CASADI_PREFIX(s4)
#define casadi_s40 CASADI_PREFIX(s40)
#define casadi_s41 CASADI_PREFIX(s41)
#define casadi_s42 CASADI_PREFIX(s42)
#define casadi_s43 CASADI_PREFIX(s43)
#define casadi_s44 CASADI_PREFIX(s44)
#define casadi_s45 CASADI_PREFIX(s45)
#define casadi_s46 CASADI_PREFIX(s46)
#define casadi_s47 CASADI_PREFIX(s47)
#define casadi_s48 CASADI_PREFIX(s48)
#define casadi_s49 CASADI_PREFIX(s49)
#define casadi_s5 CASADI_PREFIX(s5)
#define casadi_s50 CASADI_PREFIX(s50)
#define casadi_s51 CASADI_PREFIX(s51)
#define casadi_s52 CASADI_PREFIX(s52)
#define casadi_s53 CASADI_PREFIX(s53)
#define casadi_s54 CASADI_PREFIX(s54)
#define casadi_s55 CASADI_PREFIX(s55)
#define casadi_s56 CASADI_PREFIX(s56)
#define casadi_s57 CASADI_PREFIX(s57)
#define casadi_s58 CASADI_PREFIX(s58)
#define casadi_s59 CASADI_PREFIX(s59)
#define casadi_s6 CASADI_PREFIX(s6)
#define casadi_s60 CASADI_PREFIX(s60)
#define casadi_s61 CASADI_PREFIX(s61)
#define casadi_s62 CASADI_PREFIX(s62)
#define casadi_s63 CASADI_PREFIX(s63)
#define casadi_s64 CASADI_PREFIX(s64)
#define casadi_s65 CASADI_PREFIX(s65)
#define casadi_s66 CASADI_PREFIX(s66)
#define casadi_s67 CASADI_PREFIX(s67)
#define casadi_s68 CASADI_PREFIX(s68)
#define casadi_s69 CASADI_PREFIX(s69)
#define casadi_s7 CASADI_PREFIX(s7)
#define casadi_s70 CASADI_PREFIX(s70)
#define casadi_s71 CASADI_PREFIX(s71)
#define casadi_s72 CASADI_PREFIX(s72)
#define casadi_s73 CASADI_PREFIX(s73)
#define casadi_s74 CASADI_PREFIX(s74)
#define casadi_s75 CASADI_PREFIX(s75)
#define casadi_s76 CASADI_PREFIX(s76)
#define casadi_s77 CASADI_PREFIX(s77)
#define casadi_s78 CASADI_PREFIX(s78)
#define casadi_s79 CASADI_PREFIX(s79)
#define casadi_s8 CASADI_PREFIX(s8)
#define casadi_s80 CASADI_PREFIX(s80)
#define casadi_s81 CASADI_PREFIX(s81)
#define casadi_s82 CASADI_PREFIX(s82)
#define casadi_s83 CASADI_PREFIX(s83)
#define casadi_s84 CASADI_PREFIX(s84)
#define casadi_s85 CASADI_PREFIX(s85)
#define casadi_s86 CASADI_PREFIX(s86)
#define casadi_s87 CASADI_PREFIX(s87)
#define casadi_s88 CASADI_PREFIX(s88)
#define casadi_s89 CASADI_PREFIX(s89)
#define casadi_s9 CASADI_PREFIX(s9)
#define casadi_s90 CASADI_PREFIX(s90)
#define casadi_s91 CASADI_PREFIX(s91)
#define casadi_s92 CASADI_PREFIX(s92)
#define casadi_s93 CASADI_PREFIX(s93)
#define casadi_s94 CASADI_PREFIX(s94)
#define casadi_s95 CASADI_PREFIX(s95)
#define casadi_s96 CASADI_PREFIX(s96)
#define casadi_s97 CASADI_PREFIX(s97)
#define casadi_s98 CASADI_PREFIX(s98)
#define casadi_s99 CASADI_PREFIX(s99)
#define casadi_trans CASADI_PREFIX(trans)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

void casadi_clear(casadi_real* x, casadi_int n) {
  casadi_int i;
  if (x) {
    for (i=0; i<n; ++i) *x++ = 0;
  }
}

void casadi_copy(const casadi_real* x, casadi_int n, casadi_real* y) {
  casadi_int i;
  if (y) {
    if (x) {
      for (i=0; i<n; ++i) *y++ = *x++;
    } else {
      for (i=0; i<n; ++i) *y++ = 0.;
    }
  }
}

void casadi_mtimes(const casadi_real* x, const casadi_int* sp_x, const casadi_real* y, const casadi_int* sp_y, casadi_real* z, const casadi_int* sp_z, casadi_real* w, casadi_int tr) {
  casadi_int ncol_x, ncol_y, ncol_z, cc;
  const casadi_int *colind_x, *row_x, *colind_y, *row_y, *colind_z, *row_z;
  ncol_x = sp_x[1];
  colind_x = sp_x+2; row_x = sp_x + 2 + ncol_x+1;
  ncol_y = sp_y[1];
  colind_y = sp_y+2; row_y = sp_y + 2 + ncol_y+1;
  ncol_z = sp_z[1];
  colind_z = sp_z+2; row_z = sp_z + 2 + ncol_z+1;
  if (tr) {
    for (cc=0; cc<ncol_z; ++cc) {
      casadi_int kk;
      for (kk=colind_y[cc]; kk<colind_y[cc+1]; ++kk) {
        w[row_y[kk]] = y[kk];
      }
      for (kk=colind_z[cc]; kk<colind_z[cc+1]; ++kk) {
        casadi_int kk1;
        casadi_int rr = row_z[kk];
        for (kk1=colind_x[rr]; kk1<colind_x[rr+1]; ++kk1) {
          z[kk] += x[kk1] * w[row_x[kk1]];
        }
      }
    }
  } else {
    for (cc=0; cc<ncol_y; ++cc) {
      casadi_int kk;
      for (kk=colind_z[cc]; kk<colind_z[cc+1]; ++kk) {
        w[row_z[kk]] = z[kk];
      }
      for (kk=colind_y[cc]; kk<colind_y[cc+1]; ++kk) {
        casadi_int kk1;
        casadi_int rr = row_y[kk];
        for (kk1=colind_x[rr]; kk1<colind_x[rr+1]; ++kk1) {
          w[row_x[kk1]] += x[kk1]*y[kk];
        }
      }
      for (kk=colind_z[cc]; kk<colind_z[cc+1]; ++kk) {
        z[kk] = w[row_z[kk]];
      }
    }
  }
}

void casadi_fill(casadi_real* x, casadi_int n, casadi_real alpha) {
  casadi_int i;
  if (x) {
    for (i=0; i<n; ++i) *x++ = alpha;
  }
}

void casadi_trans(const casadi_real* x, const casadi_int* sp_x, casadi_real* y,
    const casadi_int* sp_y, casadi_int* tmp) {
  casadi_int ncol_x, nnz_x, ncol_y, k;
  const casadi_int* row_x, *colind_y;
  ncol_x = sp_x[1];
  nnz_x = sp_x[2 + ncol_x];
  row_x = sp_x + 2 + ncol_x+1;
  ncol_y = sp_y[1];
  colind_y = sp_y+2;
  for (k=0; k<ncol_y; ++k) tmp[k] = colind_y[k];
  for (k=0; k<nnz_x; ++k) {
    y[tmp[row_x[k]]++] = x[k];
  }
}

static const casadi_int casadi_s0[118] = {114, 1, 0, 114, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113};
static const casadi_int casadi_s1[1193] = {34, 34, 0, 34, 68, 102, 136, 170, 204, 238, 272, 306, 340, 374, 408, 442, 476, 510, 544, 578, 612, 646, 680, 714, 748, 782, 816, 850, 884, 918, 952, 986, 1020, 1054, 1088, 1122, 1156, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s2[38] = {34, 1, 0, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s3[703] = {34, 20, 0, 34, 68, 102, 136, 170, 204, 238, 272, 306, 340, 374, 408, 442, 476, 510, 544, 578, 612, 646, 680, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s4[241] = {6, 34, 0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 90, 96, 102, 108, 114, 120, 126, 132, 138, 144, 150, 156, 162, 168, 174, 180, 186, 192, 198, 204, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5};
static const casadi_int casadi_s5[10] = {6, 1, 0, 6, 0, 1, 2, 3, 4, 5};
static const casadi_int casadi_s6[1465] = {42, 34, 0, 42, 84, 126, 168, 210, 252, 294, 336, 378, 420, 462, 504, 546, 588, 630, 672, 714, 756, 798, 840, 882, 924, 966, 1008, 1050, 1092, 1134, 1176, 1218, 1260, 1302, 1344, 1386, 1428, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41};
static const casadi_int casadi_s7[46] = {42, 1, 0, 42, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41};
static const casadi_int casadi_s8[86] = {82, 1, 0, 82, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81};
static const casadi_int casadi_s9[5] = {34, 1, 0, 1, 0};
static const casadi_int casadi_s10[82] = {0, 72, 144, 216, 288, 360, 432, 504, 576, 648, 720, 792, 864, 936, 1008, 1080, 1152, 1224, 1296, 1368, 1440, 1512, 1584, 1656, 1728, 1800, 1872, 1944, 2016, 2088, 2160, 2232, 2304, 2376, 2448, 2482, 2516, 2550, 2584, 2618, 2652, 2687, 2722, 2757, 2792, 2827, 2862, 2897, 2932, 2967, 3002, 3037, 3072, 3107, 3142, 3177, 3212, 3247, 3282, 3317, 3352, 3387, 3422, 3457, 3492, 3527, 3562, 3597, 3632, 3667, 3702, 3737, 3772, 3807, 3842, 3877, 3912, 3947, 3982, 4017, 4052, 4087};
static const casadi_int casadi_s11[5] = {34, 1, 0, 1, 1};
static const casadi_int casadi_s12[82] = {1, 73, 145, 217, 289, 361, 433, 505, 577, 649, 721, 793, 865, 937, 1009, 1081, 1153, 1225, 1297, 1369, 1441, 1513, 1585, 1657, 1729, 1801, 1873, 1945, 2017, 2089, 2161, 2233, 2305, 2377, 2449, 2483, 2517, 2551, 2585, 2619, 2653, 2688, 2723, 2758, 2793, 2828, 2863, 2898, 2933, 2968, 3003, 3038, 3073, 3108, 3143, 3178, 3213, 3248, 3283, 3318, 3353, 3388, 3423, 3458, 3493, 3528, 3563, 3598, 3633, 3668, 3703, 3738, 3773, 3808, 3843, 3878, 3913, 3948, 3983, 4018, 4053, 4088};
static const casadi_int casadi_s13[5] = {34, 1, 0, 1, 2};
static const casadi_int casadi_s14[82] = {2, 74, 146, 218, 290, 362, 434, 506, 578, 650, 722, 794, 866, 938, 1010, 1082, 1154, 1226, 1298, 1370, 1442, 1514, 1586, 1658, 1730, 1802, 1874, 1946, 2018, 2090, 2162, 2234, 2306, 2378, 2450, 2484, 2518, 2552, 2586, 2620, 2654, 2689, 2724, 2759, 2794, 2829, 2864, 2899, 2934, 2969, 3004, 3039, 3074, 3109, 3144, 3179, 3214, 3249, 3284, 3319, 3354, 3389, 3424, 3459, 3494, 3529, 3564, 3599, 3634, 3669, 3704, 3739, 3774, 3809, 3844, 3879, 3914, 3949, 3984, 4019, 4054, 4089};
static const casadi_int casadi_s15[5] = {34, 1, 0, 1, 3};
static const casadi_int casadi_s16[82] = {3, 75, 147, 219, 291, 363, 435, 507, 579, 651, 723, 795, 867, 939, 1011, 1083, 1155, 1227, 1299, 1371, 1443, 1515, 1587, 1659, 1731, 1803, 1875, 1947, 2019, 2091, 2163, 2235, 2307, 2379, 2451, 2485, 2519, 2553, 2587, 2621, 2655, 2690, 2725, 2760, 2795, 2830, 2865, 2900, 2935, 2970, 3005, 3040, 3075, 3110, 3145, 3180, 3215, 3250, 3285, 3320, 3355, 3390, 3425, 3460, 3495, 3530, 3565, 3600, 3635, 3670, 3705, 3740, 3775, 3810, 3845, 3880, 3915, 3950, 3985, 4020, 4055, 4090};
static const casadi_int casadi_s17[5] = {34, 1, 0, 1, 4};
static const casadi_int casadi_s18[82] = {4, 76, 148, 220, 292, 364, 436, 508, 580, 652, 724, 796, 868, 940, 1012, 1084, 1156, 1228, 1300, 1372, 1444, 1516, 1588, 1660, 1732, 1804, 1876, 1948, 2020, 2092, 2164, 2236, 2308, 2380, 2452, 2486, 2520, 2554, 2588, 2622, 2656, 2691, 2726, 2761, 2796, 2831, 2866, 2901, 2936, 2971, 3006, 3041, 3076, 3111, 3146, 3181, 3216, 3251, 3286, 3321, 3356, 3391, 3426, 3461, 3496, 3531, 3566, 3601, 3636, 3671, 3706, 3741, 3776, 3811, 3846, 3881, 3916, 3951, 3986, 4021, 4056, 4091};
static const casadi_int casadi_s19[5] = {34, 1, 0, 1, 5};
static const casadi_int casadi_s20[82] = {5, 77, 149, 221, 293, 365, 437, 509, 581, 653, 725, 797, 869, 941, 1013, 1085, 1157, 1229, 1301, 1373, 1445, 1517, 1589, 1661, 1733, 1805, 1877, 1949, 2021, 2093, 2165, 2237, 2309, 2381, 2453, 2487, 2521, 2555, 2589, 2623, 2657, 2692, 2727, 2762, 2797, 2832, 2867, 2902, 2937, 2972, 3007, 3042, 3077, 3112, 3147, 3182, 3217, 3252, 3287, 3322, 3357, 3392, 3427, 3462, 3497, 3532, 3567, 3602, 3637, 3672, 3707, 3742, 3777, 3812, 3847, 3882, 3917, 3952, 3987, 4022, 4057, 4092};
static const casadi_int casadi_s21[5] = {34, 1, 0, 1, 6};
static const casadi_int casadi_s22[82] = {6, 78, 150, 222, 294, 366, 438, 510, 582, 654, 726, 798, 870, 942, 1014, 1086, 1158, 1230, 1302, 1374, 1446, 1518, 1590, 1662, 1734, 1806, 1878, 1950, 2022, 2094, 2166, 2238, 2310, 2382, 2454, 2488, 2522, 2556, 2590, 2624, 2658, 2693, 2728, 2763, 2798, 2833, 2868, 2903, 2938, 2973, 3008, 3043, 3078, 3113, 3148, 3183, 3218, 3253, 3288, 3323, 3358, 3393, 3428, 3463, 3498, 3533, 3568, 3603, 3638, 3673, 3708, 3743, 3778, 3813, 3848, 3883, 3918, 3953, 3988, 4023, 4058, 4093};
static const casadi_int casadi_s23[5] = {34, 1, 0, 1, 7};
static const casadi_int casadi_s24[82] = {7, 79, 151, 223, 295, 367, 439, 511, 583, 655, 727, 799, 871, 943, 1015, 1087, 1159, 1231, 1303, 1375, 1447, 1519, 1591, 1663, 1735, 1807, 1879, 1951, 2023, 2095, 2167, 2239, 2311, 2383, 2455, 2489, 2523, 2557, 2591, 2625, 2659, 2694, 2729, 2764, 2799, 2834, 2869, 2904, 2939, 2974, 3009, 3044, 3079, 3114, 3149, 3184, 3219, 3254, 3289, 3324, 3359, 3394, 3429, 3464, 3499, 3534, 3569, 3604, 3639, 3674, 3709, 3744, 3779, 3814, 3849, 3884, 3919, 3954, 3989, 4024, 4059, 4094};
static const casadi_int casadi_s25[5] = {34, 1, 0, 1, 8};
static const casadi_int casadi_s26[82] = {8, 80, 152, 224, 296, 368, 440, 512, 584, 656, 728, 800, 872, 944, 1016, 1088, 1160, 1232, 1304, 1376, 1448, 1520, 1592, 1664, 1736, 1808, 1880, 1952, 2024, 2096, 2168, 2240, 2312, 2384, 2456, 2490, 2524, 2558, 2592, 2626, 2660, 2695, 2730, 2765, 2800, 2835, 2870, 2905, 2940, 2975, 3010, 3045, 3080, 3115, 3150, 3185, 3220, 3255, 3290, 3325, 3360, 3395, 3430, 3465, 3500, 3535, 3570, 3605, 3640, 3675, 3710, 3745, 3780, 3815, 3850, 3885, 3920, 3955, 3990, 4025, 4060, 4095};
static const casadi_int casadi_s27[5] = {34, 1, 0, 1, 9};
static const casadi_int casadi_s28[82] = {9, 81, 153, 225, 297, 369, 441, 513, 585, 657, 729, 801, 873, 945, 1017, 1089, 1161, 1233, 1305, 1377, 1449, 1521, 1593, 1665, 1737, 1809, 1881, 1953, 2025, 2097, 2169, 2241, 2313, 2385, 2457, 2491, 2525, 2559, 2593, 2627, 2661, 2696, 2731, 2766, 2801, 2836, 2871, 2906, 2941, 2976, 3011, 3046, 3081, 3116, 3151, 3186, 3221, 3256, 3291, 3326, 3361, 3396, 3431, 3466, 3501, 3536, 3571, 3606, 3641, 3676, 3711, 3746, 3781, 3816, 3851, 3886, 3921, 3956, 3991, 4026, 4061, 4096};
static const casadi_int casadi_s29[5] = {34, 1, 0, 1, 10};
static const casadi_int casadi_s30[82] = {10, 82, 154, 226, 298, 370, 442, 514, 586, 658, 730, 802, 874, 946, 1018, 1090, 1162, 1234, 1306, 1378, 1450, 1522, 1594, 1666, 1738, 1810, 1882, 1954, 2026, 2098, 2170, 2242, 2314, 2386, 2458, 2492, 2526, 2560, 2594, 2628, 2662, 2697, 2732, 2767, 2802, 2837, 2872, 2907, 2942, 2977, 3012, 3047, 3082, 3117, 3152, 3187, 3222, 3257, 3292, 3327, 3362, 3397, 3432, 3467, 3502, 3537, 3572, 3607, 3642, 3677, 3712, 3747, 3782, 3817, 3852, 3887, 3922, 3957, 3992, 4027, 4062, 4097};
static const casadi_int casadi_s31[5] = {34, 1, 0, 1, 11};
static const casadi_int casadi_s32[82] = {11, 83, 155, 227, 299, 371, 443, 515, 587, 659, 731, 803, 875, 947, 1019, 1091, 1163, 1235, 1307, 1379, 1451, 1523, 1595, 1667, 1739, 1811, 1883, 1955, 2027, 2099, 2171, 2243, 2315, 2387, 2459, 2493, 2527, 2561, 2595, 2629, 2663, 2698, 2733, 2768, 2803, 2838, 2873, 2908, 2943, 2978, 3013, 3048, 3083, 3118, 3153, 3188, 3223, 3258, 3293, 3328, 3363, 3398, 3433, 3468, 3503, 3538, 3573, 3608, 3643, 3678, 3713, 3748, 3783, 3818, 3853, 3888, 3923, 3958, 3993, 4028, 4063, 4098};
static const casadi_int casadi_s33[5] = {34, 1, 0, 1, 12};
static const casadi_int casadi_s34[82] = {12, 84, 156, 228, 300, 372, 444, 516, 588, 660, 732, 804, 876, 948, 1020, 1092, 1164, 1236, 1308, 1380, 1452, 1524, 1596, 1668, 1740, 1812, 1884, 1956, 2028, 2100, 2172, 2244, 2316, 2388, 2460, 2494, 2528, 2562, 2596, 2630, 2664, 2699, 2734, 2769, 2804, 2839, 2874, 2909, 2944, 2979, 3014, 3049, 3084, 3119, 3154, 3189, 3224, 3259, 3294, 3329, 3364, 3399, 3434, 3469, 3504, 3539, 3574, 3609, 3644, 3679, 3714, 3749, 3784, 3819, 3854, 3889, 3924, 3959, 3994, 4029, 4064, 4099};
static const casadi_int casadi_s35[5] = {34, 1, 0, 1, 13};
static const casadi_int casadi_s36[82] = {13, 85, 157, 229, 301, 373, 445, 517, 589, 661, 733, 805, 877, 949, 1021, 1093, 1165, 1237, 1309, 1381, 1453, 1525, 1597, 1669, 1741, 1813, 1885, 1957, 2029, 2101, 2173, 2245, 2317, 2389, 2461, 2495, 2529, 2563, 2597, 2631, 2665, 2700, 2735, 2770, 2805, 2840, 2875, 2910, 2945, 2980, 3015, 3050, 3085, 3120, 3155, 3190, 3225, 3260, 3295, 3330, 3365, 3400, 3435, 3470, 3505, 3540, 3575, 3610, 3645, 3680, 3715, 3750, 3785, 3820, 3855, 3890, 3925, 3960, 3995, 4030, 4065, 4100};
static const casadi_int casadi_s37[5] = {34, 1, 0, 1, 14};
static const casadi_int casadi_s38[82] = {14, 86, 158, 230, 302, 374, 446, 518, 590, 662, 734, 806, 878, 950, 1022, 1094, 1166, 1238, 1310, 1382, 1454, 1526, 1598, 1670, 1742, 1814, 1886, 1958, 2030, 2102, 2174, 2246, 2318, 2390, 2462, 2496, 2530, 2564, 2598, 2632, 2666, 2701, 2736, 2771, 2806, 2841, 2876, 2911, 2946, 2981, 3016, 3051, 3086, 3121, 3156, 3191, 3226, 3261, 3296, 3331, 3366, 3401, 3436, 3471, 3506, 3541, 3576, 3611, 3646, 3681, 3716, 3751, 3786, 3821, 3856, 3891, 3926, 3961, 3996, 4031, 4066, 4101};
static const casadi_int casadi_s39[5] = {34, 1, 0, 1, 15};
static const casadi_int casadi_s40[82] = {15, 87, 159, 231, 303, 375, 447, 519, 591, 663, 735, 807, 879, 951, 1023, 1095, 1167, 1239, 1311, 1383, 1455, 1527, 1599, 1671, 1743, 1815, 1887, 1959, 2031, 2103, 2175, 2247, 2319, 2391, 2463, 2497, 2531, 2565, 2599, 2633, 2667, 2702, 2737, 2772, 2807, 2842, 2877, 2912, 2947, 2982, 3017, 3052, 3087, 3122, 3157, 3192, 3227, 3262, 3297, 3332, 3367, 3402, 3437, 3472, 3507, 3542, 3577, 3612, 3647, 3682, 3717, 3752, 3787, 3822, 3857, 3892, 3927, 3962, 3997, 4032, 4067, 4102};
static const casadi_int casadi_s41[5] = {34, 1, 0, 1, 16};
static const casadi_int casadi_s42[82] = {16, 88, 160, 232, 304, 376, 448, 520, 592, 664, 736, 808, 880, 952, 1024, 1096, 1168, 1240, 1312, 1384, 1456, 1528, 1600, 1672, 1744, 1816, 1888, 1960, 2032, 2104, 2176, 2248, 2320, 2392, 2464, 2498, 2532, 2566, 2600, 2634, 2668, 2703, 2738, 2773, 2808, 2843, 2878, 2913, 2948, 2983, 3018, 3053, 3088, 3123, 3158, 3193, 3228, 3263, 3298, 3333, 3368, 3403, 3438, 3473, 3508, 3543, 3578, 3613, 3648, 3683, 3718, 3753, 3788, 3823, 3858, 3893, 3928, 3963, 3998, 4033, 4068, 4103};
static const casadi_int casadi_s43[5] = {34, 1, 0, 1, 17};
static const casadi_int casadi_s44[82] = {17, 89, 161, 233, 305, 377, 449, 521, 593, 665, 737, 809, 881, 953, 1025, 1097, 1169, 1241, 1313, 1385, 1457, 1529, 1601, 1673, 1745, 1817, 1889, 1961, 2033, 2105, 2177, 2249, 2321, 2393, 2465, 2499, 2533, 2567, 2601, 2635, 2669, 2704, 2739, 2774, 2809, 2844, 2879, 2914, 2949, 2984, 3019, 3054, 3089, 3124, 3159, 3194, 3229, 3264, 3299, 3334, 3369, 3404, 3439, 3474, 3509, 3544, 3579, 3614, 3649, 3684, 3719, 3754, 3789, 3824, 3859, 3894, 3929, 3964, 3999, 4034, 4069, 4104};
static const casadi_int casadi_s45[5] = {34, 1, 0, 1, 18};
static const casadi_int casadi_s46[82] = {18, 90, 162, 234, 306, 378, 450, 522, 594, 666, 738, 810, 882, 954, 1026, 1098, 1170, 1242, 1314, 1386, 1458, 1530, 1602, 1674, 1746, 1818, 1890, 1962, 2034, 2106, 2178, 2250, 2322, 2394, 2466, 2500, 2534, 2568, 2602, 2636, 2670, 2705, 2740, 2775, 2810, 2845, 2880, 2915, 2950, 2985, 3020, 3055, 3090, 3125, 3160, 3195, 3230, 3265, 3300, 3335, 3370, 3405, 3440, 3475, 3510, 3545, 3580, 3615, 3650, 3685, 3720, 3755, 3790, 3825, 3860, 3895, 3930, 3965, 4000, 4035, 4070, 4105};
static const casadi_int casadi_s47[5] = {34, 1, 0, 1, 19};
static const casadi_int casadi_s48[82] = {19, 91, 163, 235, 307, 379, 451, 523, 595, 667, 739, 811, 883, 955, 1027, 1099, 1171, 1243, 1315, 1387, 1459, 1531, 1603, 1675, 1747, 1819, 1891, 1963, 2035, 2107, 2179, 2251, 2323, 2395, 2467, 2501, 2535, 2569, 2603, 2637, 2671, 2706, 2741, 2776, 2811, 2846, 2881, 2916, 2951, 2986, 3021, 3056, 3091, 3126, 3161, 3196, 3231, 3266, 3301, 3336, 3371, 3406, 3441, 3476, 3511, 3546, 3581, 3616, 3651, 3686, 3721, 3756, 3791, 3826, 3861, 3896, 3931, 3966, 4001, 4036, 4071, 4106};
static const casadi_int casadi_s49[5] = {34, 1, 0, 1, 20};
static const casadi_int casadi_s50[82] = {20, 92, 164, 236, 308, 380, 452, 524, 596, 668, 740, 812, 884, 956, 1028, 1100, 1172, 1244, 1316, 1388, 1460, 1532, 1604, 1676, 1748, 1820, 1892, 1964, 2036, 2108, 2180, 2252, 2324, 2396, 2468, 2502, 2536, 2570, 2604, 2638, 2672, 2707, 2742, 2777, 2812, 2847, 2882, 2917, 2952, 2987, 3022, 3057, 3092, 3127, 3162, 3197, 3232, 3267, 3302, 3337, 3372, 3407, 3442, 3477, 3512, 3547, 3582, 3617, 3652, 3687, 3722, 3757, 3792, 3827, 3862, 3897, 3932, 3967, 4002, 4037, 4072, 4107};
static const casadi_int casadi_s51[5] = {34, 1, 0, 1, 21};
static const casadi_int casadi_s52[82] = {21, 93, 165, 237, 309, 381, 453, 525, 597, 669, 741, 813, 885, 957, 1029, 1101, 1173, 1245, 1317, 1389, 1461, 1533, 1605, 1677, 1749, 1821, 1893, 1965, 2037, 2109, 2181, 2253, 2325, 2397, 2469, 2503, 2537, 2571, 2605, 2639, 2673, 2708, 2743, 2778, 2813, 2848, 2883, 2918, 2953, 2988, 3023, 3058, 3093, 3128, 3163, 3198, 3233, 3268, 3303, 3338, 3373, 3408, 3443, 3478, 3513, 3548, 3583, 3618, 3653, 3688, 3723, 3758, 3793, 3828, 3863, 3898, 3933, 3968, 4003, 4038, 4073, 4108};
static const casadi_int casadi_s53[5] = {34, 1, 0, 1, 22};
static const casadi_int casadi_s54[82] = {22, 94, 166, 238, 310, 382, 454, 526, 598, 670, 742, 814, 886, 958, 1030, 1102, 1174, 1246, 1318, 1390, 1462, 1534, 1606, 1678, 1750, 1822, 1894, 1966, 2038, 2110, 2182, 2254, 2326, 2398, 2470, 2504, 2538, 2572, 2606, 2640, 2674, 2709, 2744, 2779, 2814, 2849, 2884, 2919, 2954, 2989, 3024, 3059, 3094, 3129, 3164, 3199, 3234, 3269, 3304, 3339, 3374, 3409, 3444, 3479, 3514, 3549, 3584, 3619, 3654, 3689, 3724, 3759, 3794, 3829, 3864, 3899, 3934, 3969, 4004, 4039, 4074, 4109};
static const casadi_int casadi_s55[5] = {34, 1, 0, 1, 23};
static const casadi_int casadi_s56[82] = {23, 95, 167, 239, 311, 383, 455, 527, 599, 671, 743, 815, 887, 959, 1031, 1103, 1175, 1247, 1319, 1391, 1463, 1535, 1607, 1679, 1751, 1823, 1895, 1967, 2039, 2111, 2183, 2255, 2327, 2399, 2471, 2505, 2539, 2573, 2607, 2641, 2675, 2710, 2745, 2780, 2815, 2850, 2885, 2920, 2955, 2990, 3025, 3060, 3095, 3130, 3165, 3200, 3235, 3270, 3305, 3340, 3375, 3410, 3445, 3480, 3515, 3550, 3585, 3620, 3655, 3690, 3725, 3760, 3795, 3830, 3865, 3900, 3935, 3970, 4005, 4040, 4075, 4110};
static const casadi_int casadi_s57[5] = {34, 1, 0, 1, 24};
static const casadi_int casadi_s58[82] = {24, 96, 168, 240, 312, 384, 456, 528, 600, 672, 744, 816, 888, 960, 1032, 1104, 1176, 1248, 1320, 1392, 1464, 1536, 1608, 1680, 1752, 1824, 1896, 1968, 2040, 2112, 2184, 2256, 2328, 2400, 2472, 2506, 2540, 2574, 2608, 2642, 2676, 2711, 2746, 2781, 2816, 2851, 2886, 2921, 2956, 2991, 3026, 3061, 3096, 3131, 3166, 3201, 3236, 3271, 3306, 3341, 3376, 3411, 3446, 3481, 3516, 3551, 3586, 3621, 3656, 3691, 3726, 3761, 3796, 3831, 3866, 3901, 3936, 3971, 4006, 4041, 4076, 4111};
static const casadi_int casadi_s59[5] = {34, 1, 0, 1, 25};
static const casadi_int casadi_s60[82] = {25, 97, 169, 241, 313, 385, 457, 529, 601, 673, 745, 817, 889, 961, 1033, 1105, 1177, 1249, 1321, 1393, 1465, 1537, 1609, 1681, 1753, 1825, 1897, 1969, 2041, 2113, 2185, 2257, 2329, 2401, 2473, 2507, 2541, 2575, 2609, 2643, 2677, 2712, 2747, 2782, 2817, 2852, 2887, 2922, 2957, 2992, 3027, 3062, 3097, 3132, 3167, 3202, 3237, 3272, 3307, 3342, 3377, 3412, 3447, 3482, 3517, 3552, 3587, 3622, 3657, 3692, 3727, 3762, 3797, 3832, 3867, 3902, 3937, 3972, 4007, 4042, 4077, 4112};
static const casadi_int casadi_s61[5] = {34, 1, 0, 1, 26};
static const casadi_int casadi_s62[82] = {26, 98, 170, 242, 314, 386, 458, 530, 602, 674, 746, 818, 890, 962, 1034, 1106, 1178, 1250, 1322, 1394, 1466, 1538, 1610, 1682, 1754, 1826, 1898, 1970, 2042, 2114, 2186, 2258, 2330, 2402, 2474, 2508, 2542, 2576, 2610, 2644, 2678, 2713, 2748, 2783, 2818, 2853, 2888, 2923, 2958, 2993, 3028, 3063, 3098, 3133, 3168, 3203, 3238, 3273, 3308, 3343, 3378, 3413, 3448, 3483, 3518, 3553, 3588, 3623, 3658, 3693, 3728, 3763, 3798, 3833, 3868, 3903, 3938, 3973, 4008, 4043, 4078, 4113};
static const casadi_int casadi_s63[5] = {34, 1, 0, 1, 27};
static const casadi_int casadi_s64[82] = {27, 99, 171, 243, 315, 387, 459, 531, 603, 675, 747, 819, 891, 963, 1035, 1107, 1179, 1251, 1323, 1395, 1467, 1539, 1611, 1683, 1755, 1827, 1899, 1971, 2043, 2115, 2187, 2259, 2331, 2403, 2475, 2509, 2543, 2577, 2611, 2645, 2679, 2714, 2749, 2784, 2819, 2854, 2889, 2924, 2959, 2994, 3029, 3064, 3099, 3134, 3169, 3204, 3239, 3274, 3309, 3344, 3379, 3414, 3449, 3484, 3519, 3554, 3589, 3624, 3659, 3694, 3729, 3764, 3799, 3834, 3869, 3904, 3939, 3974, 4009, 4044, 4079, 4114};
static const casadi_int casadi_s65[5] = {34, 1, 0, 1, 28};
static const casadi_int casadi_s66[82] = {28, 100, 172, 244, 316, 388, 460, 532, 604, 676, 748, 820, 892, 964, 1036, 1108, 1180, 1252, 1324, 1396, 1468, 1540, 1612, 1684, 1756, 1828, 1900, 1972, 2044, 2116, 2188, 2260, 2332, 2404, 2476, 2510, 2544, 2578, 2612, 2646, 2680, 2715, 2750, 2785, 2820, 2855, 2890, 2925, 2960, 2995, 3030, 3065, 3100, 3135, 3170, 3205, 3240, 3275, 3310, 3345, 3380, 3415, 3450, 3485, 3520, 3555, 3590, 3625, 3660, 3695, 3730, 3765, 3800, 3835, 3870, 3905, 3940, 3975, 4010, 4045, 4080, 4115};
static const casadi_int casadi_s67[5] = {34, 1, 0, 1, 29};
static const casadi_int casadi_s68[82] = {29, 101, 173, 245, 317, 389, 461, 533, 605, 677, 749, 821, 893, 965, 1037, 1109, 1181, 1253, 1325, 1397, 1469, 1541, 1613, 1685, 1757, 1829, 1901, 1973, 2045, 2117, 2189, 2261, 2333, 2405, 2477, 2511, 2545, 2579, 2613, 2647, 2681, 2716, 2751, 2786, 2821, 2856, 2891, 2926, 2961, 2996, 3031, 3066, 3101, 3136, 3171, 3206, 3241, 3276, 3311, 3346, 3381, 3416, 3451, 3486, 3521, 3556, 3591, 3626, 3661, 3696, 3731, 3766, 3801, 3836, 3871, 3906, 3941, 3976, 4011, 4046, 4081, 4116};
static const casadi_int casadi_s69[5] = {34, 1, 0, 1, 30};
static const casadi_int casadi_s70[82] = {30, 102, 174, 246, 318, 390, 462, 534, 606, 678, 750, 822, 894, 966, 1038, 1110, 1182, 1254, 1326, 1398, 1470, 1542, 1614, 1686, 1758, 1830, 1902, 1974, 2046, 2118, 2190, 2262, 2334, 2406, 2478, 2512, 2546, 2580, 2614, 2648, 2682, 2717, 2752, 2787, 2822, 2857, 2892, 2927, 2962, 2997, 3032, 3067, 3102, 3137, 3172, 3207, 3242, 3277, 3312, 3347, 3382, 3417, 3452, 3487, 3522, 3557, 3592, 3627, 3662, 3697, 3732, 3767, 3802, 3837, 3872, 3907, 3942, 3977, 4012, 4047, 4082, 4117};
static const casadi_int casadi_s71[5] = {34, 1, 0, 1, 31};
static const casadi_int casadi_s72[82] = {31, 103, 175, 247, 319, 391, 463, 535, 607, 679, 751, 823, 895, 967, 1039, 1111, 1183, 1255, 1327, 1399, 1471, 1543, 1615, 1687, 1759, 1831, 1903, 1975, 2047, 2119, 2191, 2263, 2335, 2407, 2479, 2513, 2547, 2581, 2615, 2649, 2683, 2718, 2753, 2788, 2823, 2858, 2893, 2928, 2963, 2998, 3033, 3068, 3103, 3138, 3173, 3208, 3243, 3278, 3313, 3348, 3383, 3418, 3453, 3488, 3523, 3558, 3593, 3628, 3663, 3698, 3733, 3768, 3803, 3838, 3873, 3908, 3943, 3978, 4013, 4048, 4083, 4118};
static const casadi_int casadi_s73[5] = {34, 1, 0, 1, 32};
static const casadi_int casadi_s74[82] = {32, 104, 176, 248, 320, 392, 464, 536, 608, 680, 752, 824, 896, 968, 1040, 1112, 1184, 1256, 1328, 1400, 1472, 1544, 1616, 1688, 1760, 1832, 1904, 1976, 2048, 2120, 2192, 2264, 2336, 2408, 2480, 2514, 2548, 2582, 2616, 2650, 2684, 2719, 2754, 2789, 2824, 2859, 2894, 2929, 2964, 2999, 3034, 3069, 3104, 3139, 3174, 3209, 3244, 3279, 3314, 3349, 3384, 3419, 3454, 3489, 3524, 3559, 3594, 3629, 3664, 3699, 3734, 3769, 3804, 3839, 3874, 3909, 3944, 3979, 4014, 4049, 4084, 4119};
static const casadi_int casadi_s75[5] = {34, 1, 0, 1, 33};
static const casadi_int casadi_s76[82] = {33, 105, 177, 249, 321, 393, 465, 537, 609, 681, 753, 825, 897, 969, 1041, 1113, 1185, 1257, 1329, 1401, 1473, 1545, 1617, 1689, 1761, 1833, 1905, 1977, 2049, 2121, 2193, 2265, 2337, 2409, 2481, 2515, 2549, 2583, 2617, 2651, 2685, 2720, 2755, 2790, 2825, 2860, 2895, 2930, 2965, 3000, 3035, 3070, 3105, 3140, 3175, 3210, 3245, 3280, 3315, 3350, 3385, 3420, 3455, 3490, 3525, 3560, 3595, 3630, 3665, 3700, 3735, 3770, 3805, 3840, 3875, 3910, 3945, 3980, 4015, 4050, 4085, 4120};
static const casadi_int casadi_s77[5] = {20, 1, 0, 1, 0};
static const casadi_int casadi_s78[76] = {34, 106, 178, 250, 322, 394, 466, 538, 610, 682, 754, 826, 898, 970, 1042, 1114, 1186, 1258, 1330, 1402, 1474, 1546, 1618, 1690, 1762, 1834, 1906, 1978, 2050, 2122, 2194, 2266, 2338, 2410, 2686, 2721, 2756, 2791, 2826, 2861, 2896, 2931, 2966, 3001, 3036, 3071, 3106, 3141, 3176, 3211, 3246, 3281, 3316, 3351, 3386, 3421, 3456, 3491, 3526, 3561, 3596, 3631, 3666, 3701, 3736, 3771, 3806, 3841, 3876, 3911, 3946, 3981, 4016, 4051, 4086, 4121};
static const casadi_int casadi_s79[5] = {20, 1, 0, 1, 1};
static const casadi_int casadi_s80[5] = {20, 1, 0, 1, 2};
static const casadi_int casadi_s81[5] = {20, 1, 0, 1, 3};
static const casadi_int casadi_s82[5] = {20, 1, 0, 1, 4};
static const casadi_int casadi_s83[5] = {20, 1, 0, 1, 5};
static const casadi_int casadi_s84[5] = {20, 1, 0, 1, 6};
static const casadi_int casadi_s85[5] = {20, 1, 0, 1, 7};
static const casadi_int casadi_s86[5] = {20, 1, 0, 1, 8};
static const casadi_int casadi_s87[5] = {20, 1, 0, 1, 9};
static const casadi_int casadi_s88[5] = {20, 1, 0, 1, 10};
static const casadi_int casadi_s89[5] = {20, 1, 0, 1, 11};
static const casadi_int casadi_s90[5] = {20, 1, 0, 1, 12};
static const casadi_int casadi_s91[5] = {20, 1, 0, 1, 13};
static const casadi_int casadi_s92[5] = {20, 1, 0, 1, 14};
static const casadi_int casadi_s93[5] = {20, 1, 0, 1, 15};
static const casadi_int casadi_s94[5] = {20, 1, 0, 1, 16};
static const casadi_int casadi_s95[5] = {20, 1, 0, 1, 17};
static const casadi_int casadi_s96[5] = {20, 1, 0, 1, 18};
static const casadi_int casadi_s97[5] = {20, 1, 0, 1, 19};
static const casadi_int casadi_s98[5] = {6, 1, 0, 1, 0};
static const casadi_int casadi_s99[213] = {34, 6, 0, 34, 68, 102, 136, 170, 204, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s100[5] = {6, 1, 0, 1, 1};
static const casadi_int casadi_s101[5] = {6, 1, 0, 1, 2};
static const casadi_int casadi_s102[5] = {6, 1, 0, 1, 3};
static const casadi_int casadi_s103[5] = {6, 1, 0, 1, 4};
static const casadi_int casadi_s104[5] = {6, 1, 0, 1, 5};
static const casadi_int casadi_s105[5] = {12, 1, 0, 1, 0};
static const casadi_int casadi_s106[423] = {34, 12, 0, 34, 68, 102, 136, 170, 204, 238, 272, 306, 340, 374, 408, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33};
static const casadi_int casadi_s107[5] = {12, 1, 0, 1, 1};
static const casadi_int casadi_s108[5] = {12, 1, 0, 1, 2};
static const casadi_int casadi_s109[5] = {12, 1, 0, 1, 3};
static const casadi_int casadi_s110[5] = {12, 1, 0, 1, 4};
static const casadi_int casadi_s111[5] = {12, 1, 0, 1, 5};
static const casadi_int casadi_s112[5] = {12, 1, 0, 1, 6};
static const casadi_int casadi_s113[5] = {12, 1, 0, 1, 7};
static const casadi_int casadi_s114[5] = {12, 1, 0, 1, 8};
static const casadi_int casadi_s115[5] = {12, 1, 0, 1, 9};
static const casadi_int casadi_s116[5] = {12, 1, 0, 1, 10};
static const casadi_int casadi_s117[5] = {12, 1, 0, 1, 11};
static const casadi_int casadi_s118[4239] = {};
static const casadi_int casadi_s119[4207] = {};

/* b_eq_function:(i0[114],i1[34x34],i2[34],i3[34],i4[34x20],i5[6x34],i6[6],i7[42x34],i8[42])->(o0[82]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i, j, k;
  casadi_real *rr, *ss, *tt;
  const casadi_real *cs;
  casadi_real *w0=w+42, *w1=w+76, *w2=w+1232, *w3=w+1266, *w4=w+1300, *w5=w+1980, *w6=w+2000, *w7=w+2204, *w8=w+2408, *w9=w+2414, *w10=w+3842, *w11=w+5270, *w12=w+5474, *w13=w+5882, *w14=w+5894, *w15=w+5900, *w16=w+5942, *w17=w+5984;
  /* #0: @0 = zeros(34x1) */
  casadi_clear(w0, 34);
  /* #1: @1 = input[1][0] */
  casadi_copy(arg[1], 1156, w1);
  /* #2: @2 = input[0][0] */
  casadi_copy(arg[0], 34, w2);
  /* #3: @0 = mac(@1,@2,@0) */
  for (i=0, rr=w0; i<1; ++i) for (j=0; j<34; ++j, ++rr) for (k=0, ss=w1+j, tt=w2+i*34; k<34; ++k) *rr += ss[k*34]**tt++;
  /* #4: @3 = input[2][0] */
  casadi_copy(arg[2], 34, w3);
  /* #5: @0 = (@0+@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) += (*cs++);
  /* #6: @3 = input[3][0] */
  casadi_copy(arg[3], 34, w3);
  /* #7: @0 = (@0-@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) -= (*cs++);
  /* #8: @3 = zeros(34x1) */
  casadi_clear(w3, 34);
  /* #9: @4 = input[4][0] */
  casadi_copy(arg[4], 680, w4);
  /* #10: @5 = input[0][1] */
  casadi_copy(arg[0] ? arg[0]+34 : 0, 20, w5);
  /* #11: @3 = mac(@4,@5,@3) */
  for (i=0, rr=w3; i<1; ++i) for (j=0; j<34; ++j, ++rr) for (k=0, ss=w4+j, tt=w5+i*20; k<20; ++k) *rr += ss[k*34]**tt++;
  /* #12: @0 = (@0-@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) -= (*cs++);
  /* #13: @3 = zeros(34x1) */
  casadi_clear(w3, 34);
  /* #14: @6 = input[5][0] */
  casadi_copy(arg[5], 204, w6);
  /* #15: @7 = @6' */
  for (i=0, rr=w7, cs=w6; i<34; ++i) for (j=0; j<6; ++j) rr[i+j*34] = *cs++;
  /* #16: @8 = input[0][2] */
  casadi_copy(arg[0] ? arg[0]+54 : 0, 6, w8);
  /* #17: @3 = mac(@7,@8,@3) */
  for (i=0, rr=w3; i<1; ++i) for (j=0; j<34; ++j, ++rr) for (k=0, ss=w7+j, tt=w8+i*6; k<6; ++k) *rr += ss[k*34]**tt++;
  /* #18: @0 = (@0-@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) -= (*cs++);
  /* #19: @3 = zeros(34x1) */
  casadi_clear(w3, 34);
  /* #20: @9 = input[7][0] */
  casadi_copy(arg[7], 1428, w9);
  /* #21: @10 = @9' */
  for (i=0, rr=w10, cs=w9; i<34; ++i) for (j=0; j<42; ++j) rr[i+j*34] = *cs++;
  /* #22: {NULL, @7, @11, NULL, NULL, NULL, NULL} = horzsplit(@10) */
  casadi_copy(w10+204, 204, w7);
  casadi_copy(w10+408, 204, w11);
  /* #23: @12 = horzcat(@7, @11) */
  rr=w12;
  for (i=0, cs=w7; i<204; ++i) *rr++ = *cs++;
  for (i=0, cs=w11; i<204; ++i) *rr++ = *cs++;
  /* #24: @13 = input[0][3] */
  casadi_copy(arg[0] ? arg[0]+60 : 0, 12, w13);
  /* #25: @3 = mac(@12,@13,@3) */
  for (i=0, rr=w3; i<1; ++i) for (j=0; j<34; ++j, ++rr) for (k=0, ss=w12+j, tt=w13+i*12; k<12; ++k) *rr += ss[k*34]**tt++;
  /* #26: @0 = (@0-@3) */
  for (i=0, rr=w0, cs=w3; i<34; ++i) (*rr++) -= (*cs++);
  /* #27: @8 = zeros(6x1) */
  casadi_clear(w8, 6);
  /* #28: @8 = mac(@6,@2,@8) */
  for (i=0, rr=w8; i<1; ++i) for (j=0; j<6; ++j, ++rr) for (k=0, ss=w6+j, tt=w2+i*34; k<34; ++k) *rr += ss[k*6]**tt++;
  /* #29: @14 = input[6][0] */
  casadi_copy(arg[6], 6, w14);
  /* #30: @8 = (@8+@14) */
  for (i=0, rr=w8, cs=w14; i<6; ++i) (*rr++) += (*cs++);
  /* #31: @15 = zeros(42x1) */
  casadi_clear(w15, 42);
  /* #32: @15 = mac(@9,@2,@15) */
  for (i=0, rr=w15; i<1; ++i) for (j=0; j<42; ++j, ++rr) for (k=0, ss=w9+j, tt=w2+i*34; k<34; ++k) *rr += ss[k*42]**tt++;
  /* #33: @16 = input[8][0] */
  casadi_copy(arg[8], 42, w16);
  /* #34: @15 = (@15+@16) */
  for (i=0, rr=w15, cs=w16; i<42; ++i) (*rr++) += (*cs++);
  /* #35: @16 = input[0][4] */
  casadi_copy(arg[0] ? arg[0]+72 : 0, 42, w16);
  /* #36: @15 = (@15-@16) */
  for (i=0, rr=w15, cs=w16; i<42; ++i) (*rr++) -= (*cs++);
  /* #37: @17 = vertcat(@0, @8, @15) */
  rr=w17;
  for (i=0, cs=w0; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w8; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w15; i<42; ++i) *rr++ = *cs++;
  /* #38: @17 = (-@17) */
  for (i=0, rr=w17, cs=w17; i<82; ++i) *rr++ = (- *cs++ );
  /* #39: output[0][0] = @17 */
  casadi_copy(w17, 82, res[0]);
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void b_eq_function_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void b_eq_function_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void b_eq_function_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void b_eq_function_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int b_eq_function_n_in(void) { return 9;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int b_eq_function_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real b_eq_function_default_in(casadi_int i) {
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* b_eq_function_name_in(casadi_int i) {
  switch (i) {
    case 0: return "i0";
    case 1: return "i1";
    case 2: return "i2";
    case 3: return "i3";
    case 4: return "i4";
    case 5: return "i5";
    case 6: return "i6";
    case 7: return "i7";
    case 8: return "i8";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* b_eq_function_name_out(casadi_int i) {
  switch (i) {
    case 0: return "o0";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* b_eq_function_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    case 2: return casadi_s2;
    case 3: return casadi_s2;
    case 4: return casadi_s3;
    case 5: return casadi_s4;
    case 6: return casadi_s5;
    case 7: return casadi_s6;
    case 8: return casadi_s7;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* b_eq_function_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s8;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int b_eq_function_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 12;
  if (sz_res) *sz_res = 8;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 6066;
  return 0;
}

/* A_eq_function:(i0[114],i1[34x34],i2[34],i3[34],i4[34x20],i5[6x34],i6[6],i7[42x34],i8[42])->(o0[82x114,4122nz]) */
static int casadi_f1(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_int i, j;
  casadi_real *rr, *ss;
  const casadi_int *cii;
  const casadi_real *cs;
  casadi_real *w0=w+42, *w1=w+4164, *w2=w+4198, w3, w4, *w5=w+5356, *w6=w+5362, *w7=w+5566, *w8=w+5608, *w9=w+7036, *w10=w+7118, *w11=w+7798, *w13=w+7841, *w14=w+7917, *w15=w+7993, *w16=w+8197, *w17=w+9625, *w18=w+10033;
  /* #0: @0 = zeros(114x82,4122nz) */
  casadi_clear(w0, 4122);
  /* #1: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #2: @2 = input[1][0] */
  casadi_copy(arg[1], 1156, w2);
  /* #3: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #4: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #5: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s9, w1, casadi_s2, w, 0);
  /* #6: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #7: @6 = input[5][0] */
  casadi_copy(arg[5], 204, w6);
  /* #8: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s9, w5, casadi_s5, w, 0);
  /* #9: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #10: @8 = input[7][0] */
  casadi_copy(arg[7], 1428, w8);
  /* #11: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s9, w7, casadi_s7, w, 0);
  /* #12: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #13: (@0[0, 72, 144, 216, 288, 360, 432, 504, 576, 648, 720, 792, 864, 936, 1008, 1080, 1152, 1224, 1296, 1368, 1440, 1512, 1584, 1656, 1728, 1800, 1872, 1944, 2016, 2088, 2160, 2232, 2304, 2376, 2448, 2482, 2516, 2550, 2584, 2618, 2652, 2687, 2722, 2757, 2792, 2827, 2862, 2897, 2932, 2967, 3002, 3037, 3072, 3107, 3142, 3177, 3212, 3247, 3282, 3317, 3352, 3387, 3422, 3457, 3492, 3527, 3562, 3597, 3632, 3667, 3702, 3737, 3772, 3807, 3842, 3877, 3912, 3947, 3982, 4017, 4052, 4087] = @9) */
  for (cii=casadi_s10, rr=w0, ss=w9; cii!=casadi_s10+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #14: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #15: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #16: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #17: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s11, w1, casadi_s2, w, 0);
  /* #18: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #19: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s11, w5, casadi_s5, w, 0);
  /* #20: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #21: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s11, w7, casadi_s7, w, 0);
  /* #22: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #23: (@0[1, 73, 145, 217, 289, 361, 433, 505, 577, 649, 721, 793, 865, 937, 1009, 1081, 1153, 1225, 1297, 1369, 1441, 1513, 1585, 1657, 1729, 1801, 1873, 1945, 2017, 2089, 2161, 2233, 2305, 2377, 2449, 2483, 2517, 2551, 2585, 2619, 2653, 2688, 2723, 2758, 2793, 2828, 2863, 2898, 2933, 2968, 3003, 3038, 3073, 3108, 3143, 3178, 3213, 3248, 3283, 3318, 3353, 3388, 3423, 3458, 3493, 3528, 3563, 3598, 3633, 3668, 3703, 3738, 3773, 3808, 3843, 3878, 3913, 3948, 3983, 4018, 4053, 4088] = @9) */
  for (cii=casadi_s12, rr=w0, ss=w9; cii!=casadi_s12+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #24: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #25: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #26: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #27: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s13, w1, casadi_s2, w, 0);
  /* #28: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #29: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s13, w5, casadi_s5, w, 0);
  /* #30: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #31: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s13, w7, casadi_s7, w, 0);
  /* #32: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #33: (@0[2, 74, 146, 218, 290, 362, 434, 506, 578, 650, 722, 794, 866, 938, 1010, 1082, 1154, 1226, 1298, 1370, 1442, 1514, 1586, 1658, 1730, 1802, 1874, 1946, 2018, 2090, 2162, 2234, 2306, 2378, 2450, 2484, 2518, 2552, 2586, 2620, 2654, 2689, 2724, 2759, 2794, 2829, 2864, 2899, 2934, 2969, 3004, 3039, 3074, 3109, 3144, 3179, 3214, 3249, 3284, 3319, 3354, 3389, 3424, 3459, 3494, 3529, 3564, 3599, 3634, 3669, 3704, 3739, 3774, 3809, 3844, 3879, 3914, 3949, 3984, 4019, 4054, 4089] = @9) */
  for (cii=casadi_s14, rr=w0, ss=w9; cii!=casadi_s14+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #34: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #35: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #36: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #37: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s15, w1, casadi_s2, w, 0);
  /* #38: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #39: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s15, w5, casadi_s5, w, 0);
  /* #40: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #41: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s15, w7, casadi_s7, w, 0);
  /* #42: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #43: (@0[3, 75, 147, 219, 291, 363, 435, 507, 579, 651, 723, 795, 867, 939, 1011, 1083, 1155, 1227, 1299, 1371, 1443, 1515, 1587, 1659, 1731, 1803, 1875, 1947, 2019, 2091, 2163, 2235, 2307, 2379, 2451, 2485, 2519, 2553, 2587, 2621, 2655, 2690, 2725, 2760, 2795, 2830, 2865, 2900, 2935, 2970, 3005, 3040, 3075, 3110, 3145, 3180, 3215, 3250, 3285, 3320, 3355, 3390, 3425, 3460, 3495, 3530, 3565, 3600, 3635, 3670, 3705, 3740, 3775, 3810, 3845, 3880, 3915, 3950, 3985, 4020, 4055, 4090] = @9) */
  for (cii=casadi_s16, rr=w0, ss=w9; cii!=casadi_s16+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #44: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #45: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #46: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #47: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s17, w1, casadi_s2, w, 0);
  /* #48: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #49: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s17, w5, casadi_s5, w, 0);
  /* #50: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #51: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s17, w7, casadi_s7, w, 0);
  /* #52: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #53: (@0[4, 76, 148, 220, 292, 364, 436, 508, 580, 652, 724, 796, 868, 940, 1012, 1084, 1156, 1228, 1300, 1372, 1444, 1516, 1588, 1660, 1732, 1804, 1876, 1948, 2020, 2092, 2164, 2236, 2308, 2380, 2452, 2486, 2520, 2554, 2588, 2622, 2656, 2691, 2726, 2761, 2796, 2831, 2866, 2901, 2936, 2971, 3006, 3041, 3076, 3111, 3146, 3181, 3216, 3251, 3286, 3321, 3356, 3391, 3426, 3461, 3496, 3531, 3566, 3601, 3636, 3671, 3706, 3741, 3776, 3811, 3846, 3881, 3916, 3951, 3986, 4021, 4056, 4091] = @9) */
  for (cii=casadi_s18, rr=w0, ss=w9; cii!=casadi_s18+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #54: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #55: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #56: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #57: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s19, w1, casadi_s2, w, 0);
  /* #58: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #59: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s19, w5, casadi_s5, w, 0);
  /* #60: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #61: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s19, w7, casadi_s7, w, 0);
  /* #62: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #63: (@0[5, 77, 149, 221, 293, 365, 437, 509, 581, 653, 725, 797, 869, 941, 1013, 1085, 1157, 1229, 1301, 1373, 1445, 1517, 1589, 1661, 1733, 1805, 1877, 1949, 2021, 2093, 2165, 2237, 2309, 2381, 2453, 2487, 2521, 2555, 2589, 2623, 2657, 2692, 2727, 2762, 2797, 2832, 2867, 2902, 2937, 2972, 3007, 3042, 3077, 3112, 3147, 3182, 3217, 3252, 3287, 3322, 3357, 3392, 3427, 3462, 3497, 3532, 3567, 3602, 3637, 3672, 3707, 3742, 3777, 3812, 3847, 3882, 3917, 3952, 3987, 4022, 4057, 4092] = @9) */
  for (cii=casadi_s20, rr=w0, ss=w9; cii!=casadi_s20+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #64: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #65: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #66: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #67: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s21, w1, casadi_s2, w, 0);
  /* #68: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #69: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s21, w5, casadi_s5, w, 0);
  /* #70: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #71: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s21, w7, casadi_s7, w, 0);
  /* #72: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #73: (@0[6, 78, 150, 222, 294, 366, 438, 510, 582, 654, 726, 798, 870, 942, 1014, 1086, 1158, 1230, 1302, 1374, 1446, 1518, 1590, 1662, 1734, 1806, 1878, 1950, 2022, 2094, 2166, 2238, 2310, 2382, 2454, 2488, 2522, 2556, 2590, 2624, 2658, 2693, 2728, 2763, 2798, 2833, 2868, 2903, 2938, 2973, 3008, 3043, 3078, 3113, 3148, 3183, 3218, 3253, 3288, 3323, 3358, 3393, 3428, 3463, 3498, 3533, 3568, 3603, 3638, 3673, 3708, 3743, 3778, 3813, 3848, 3883, 3918, 3953, 3988, 4023, 4058, 4093] = @9) */
  for (cii=casadi_s22, rr=w0, ss=w9; cii!=casadi_s22+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #74: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #75: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #76: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #77: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s23, w1, casadi_s2, w, 0);
  /* #78: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #79: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s23, w5, casadi_s5, w, 0);
  /* #80: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #81: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s23, w7, casadi_s7, w, 0);
  /* #82: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #83: (@0[7, 79, 151, 223, 295, 367, 439, 511, 583, 655, 727, 799, 871, 943, 1015, 1087, 1159, 1231, 1303, 1375, 1447, 1519, 1591, 1663, 1735, 1807, 1879, 1951, 2023, 2095, 2167, 2239, 2311, 2383, 2455, 2489, 2523, 2557, 2591, 2625, 2659, 2694, 2729, 2764, 2799, 2834, 2869, 2904, 2939, 2974, 3009, 3044, 3079, 3114, 3149, 3184, 3219, 3254, 3289, 3324, 3359, 3394, 3429, 3464, 3499, 3534, 3569, 3604, 3639, 3674, 3709, 3744, 3779, 3814, 3849, 3884, 3919, 3954, 3989, 4024, 4059, 4094] = @9) */
  for (cii=casadi_s24, rr=w0, ss=w9; cii!=casadi_s24+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #84: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #85: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #86: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #87: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s25, w1, casadi_s2, w, 0);
  /* #88: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #89: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s25, w5, casadi_s5, w, 0);
  /* #90: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #91: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s25, w7, casadi_s7, w, 0);
  /* #92: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #93: (@0[8, 80, 152, 224, 296, 368, 440, 512, 584, 656, 728, 800, 872, 944, 1016, 1088, 1160, 1232, 1304, 1376, 1448, 1520, 1592, 1664, 1736, 1808, 1880, 1952, 2024, 2096, 2168, 2240, 2312, 2384, 2456, 2490, 2524, 2558, 2592, 2626, 2660, 2695, 2730, 2765, 2800, 2835, 2870, 2905, 2940, 2975, 3010, 3045, 3080, 3115, 3150, 3185, 3220, 3255, 3290, 3325, 3360, 3395, 3430, 3465, 3500, 3535, 3570, 3605, 3640, 3675, 3710, 3745, 3780, 3815, 3850, 3885, 3920, 3955, 3990, 4025, 4060, 4095] = @9) */
  for (cii=casadi_s26, rr=w0, ss=w9; cii!=casadi_s26+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #94: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #95: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #96: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #97: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s27, w1, casadi_s2, w, 0);
  /* #98: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #99: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s27, w5, casadi_s5, w, 0);
  /* #100: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #101: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s27, w7, casadi_s7, w, 0);
  /* #102: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #103: (@0[9, 81, 153, 225, 297, 369, 441, 513, 585, 657, 729, 801, 873, 945, 1017, 1089, 1161, 1233, 1305, 1377, 1449, 1521, 1593, 1665, 1737, 1809, 1881, 1953, 2025, 2097, 2169, 2241, 2313, 2385, 2457, 2491, 2525, 2559, 2593, 2627, 2661, 2696, 2731, 2766, 2801, 2836, 2871, 2906, 2941, 2976, 3011, 3046, 3081, 3116, 3151, 3186, 3221, 3256, 3291, 3326, 3361, 3396, 3431, 3466, 3501, 3536, 3571, 3606, 3641, 3676, 3711, 3746, 3781, 3816, 3851, 3886, 3921, 3956, 3991, 4026, 4061, 4096] = @9) */
  for (cii=casadi_s28, rr=w0, ss=w9; cii!=casadi_s28+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #104: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #105: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #106: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #107: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s29, w1, casadi_s2, w, 0);
  /* #108: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #109: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s29, w5, casadi_s5, w, 0);
  /* #110: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #111: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s29, w7, casadi_s7, w, 0);
  /* #112: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #113: (@0[10, 82, 154, 226, 298, 370, 442, 514, 586, 658, 730, 802, 874, 946, 1018, 1090, 1162, 1234, 1306, 1378, 1450, 1522, 1594, 1666, 1738, 1810, 1882, 1954, 2026, 2098, 2170, 2242, 2314, 2386, 2458, 2492, 2526, 2560, 2594, 2628, 2662, 2697, 2732, 2767, 2802, 2837, 2872, 2907, 2942, 2977, 3012, 3047, 3082, 3117, 3152, 3187, 3222, 3257, 3292, 3327, 3362, 3397, 3432, 3467, 3502, 3537, 3572, 3607, 3642, 3677, 3712, 3747, 3782, 3817, 3852, 3887, 3922, 3957, 3992, 4027, 4062, 4097] = @9) */
  for (cii=casadi_s30, rr=w0, ss=w9; cii!=casadi_s30+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #114: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #115: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #116: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #117: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s31, w1, casadi_s2, w, 0);
  /* #118: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #119: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s31, w5, casadi_s5, w, 0);
  /* #120: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #121: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s31, w7, casadi_s7, w, 0);
  /* #122: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #123: (@0[11, 83, 155, 227, 299, 371, 443, 515, 587, 659, 731, 803, 875, 947, 1019, 1091, 1163, 1235, 1307, 1379, 1451, 1523, 1595, 1667, 1739, 1811, 1883, 1955, 2027, 2099, 2171, 2243, 2315, 2387, 2459, 2493, 2527, 2561, 2595, 2629, 2663, 2698, 2733, 2768, 2803, 2838, 2873, 2908, 2943, 2978, 3013, 3048, 3083, 3118, 3153, 3188, 3223, 3258, 3293, 3328, 3363, 3398, 3433, 3468, 3503, 3538, 3573, 3608, 3643, 3678, 3713, 3748, 3783, 3818, 3853, 3888, 3923, 3958, 3993, 4028, 4063, 4098] = @9) */
  for (cii=casadi_s32, rr=w0, ss=w9; cii!=casadi_s32+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #124: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #125: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #126: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #127: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s33, w1, casadi_s2, w, 0);
  /* #128: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #129: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s33, w5, casadi_s5, w, 0);
  /* #130: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #131: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s33, w7, casadi_s7, w, 0);
  /* #132: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #133: (@0[12, 84, 156, 228, 300, 372, 444, 516, 588, 660, 732, 804, 876, 948, 1020, 1092, 1164, 1236, 1308, 1380, 1452, 1524, 1596, 1668, 1740, 1812, 1884, 1956, 2028, 2100, 2172, 2244, 2316, 2388, 2460, 2494, 2528, 2562, 2596, 2630, 2664, 2699, 2734, 2769, 2804, 2839, 2874, 2909, 2944, 2979, 3014, 3049, 3084, 3119, 3154, 3189, 3224, 3259, 3294, 3329, 3364, 3399, 3434, 3469, 3504, 3539, 3574, 3609, 3644, 3679, 3714, 3749, 3784, 3819, 3854, 3889, 3924, 3959, 3994, 4029, 4064, 4099] = @9) */
  for (cii=casadi_s34, rr=w0, ss=w9; cii!=casadi_s34+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #134: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #135: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #136: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #137: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s35, w1, casadi_s2, w, 0);
  /* #138: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #139: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s35, w5, casadi_s5, w, 0);
  /* #140: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #141: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s35, w7, casadi_s7, w, 0);
  /* #142: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #143: (@0[13, 85, 157, 229, 301, 373, 445, 517, 589, 661, 733, 805, 877, 949, 1021, 1093, 1165, 1237, 1309, 1381, 1453, 1525, 1597, 1669, 1741, 1813, 1885, 1957, 2029, 2101, 2173, 2245, 2317, 2389, 2461, 2495, 2529, 2563, 2597, 2631, 2665, 2700, 2735, 2770, 2805, 2840, 2875, 2910, 2945, 2980, 3015, 3050, 3085, 3120, 3155, 3190, 3225, 3260, 3295, 3330, 3365, 3400, 3435, 3470, 3505, 3540, 3575, 3610, 3645, 3680, 3715, 3750, 3785, 3820, 3855, 3890, 3925, 3960, 3995, 4030, 4065, 4100] = @9) */
  for (cii=casadi_s36, rr=w0, ss=w9; cii!=casadi_s36+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #144: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #145: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #146: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #147: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s37, w1, casadi_s2, w, 0);
  /* #148: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #149: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s37, w5, casadi_s5, w, 0);
  /* #150: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #151: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s37, w7, casadi_s7, w, 0);
  /* #152: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #153: (@0[14, 86, 158, 230, 302, 374, 446, 518, 590, 662, 734, 806, 878, 950, 1022, 1094, 1166, 1238, 1310, 1382, 1454, 1526, 1598, 1670, 1742, 1814, 1886, 1958, 2030, 2102, 2174, 2246, 2318, 2390, 2462, 2496, 2530, 2564, 2598, 2632, 2666, 2701, 2736, 2771, 2806, 2841, 2876, 2911, 2946, 2981, 3016, 3051, 3086, 3121, 3156, 3191, 3226, 3261, 3296, 3331, 3366, 3401, 3436, 3471, 3506, 3541, 3576, 3611, 3646, 3681, 3716, 3751, 3786, 3821, 3856, 3891, 3926, 3961, 3996, 4031, 4066, 4101] = @9) */
  for (cii=casadi_s38, rr=w0, ss=w9; cii!=casadi_s38+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #154: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #155: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #156: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #157: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s39, w1, casadi_s2, w, 0);
  /* #158: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #159: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s39, w5, casadi_s5, w, 0);
  /* #160: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #161: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s39, w7, casadi_s7, w, 0);
  /* #162: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #163: (@0[15, 87, 159, 231, 303, 375, 447, 519, 591, 663, 735, 807, 879, 951, 1023, 1095, 1167, 1239, 1311, 1383, 1455, 1527, 1599, 1671, 1743, 1815, 1887, 1959, 2031, 2103, 2175, 2247, 2319, 2391, 2463, 2497, 2531, 2565, 2599, 2633, 2667, 2702, 2737, 2772, 2807, 2842, 2877, 2912, 2947, 2982, 3017, 3052, 3087, 3122, 3157, 3192, 3227, 3262, 3297, 3332, 3367, 3402, 3437, 3472, 3507, 3542, 3577, 3612, 3647, 3682, 3717, 3752, 3787, 3822, 3857, 3892, 3927, 3962, 3997, 4032, 4067, 4102] = @9) */
  for (cii=casadi_s40, rr=w0, ss=w9; cii!=casadi_s40+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #164: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #165: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #166: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #167: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s41, w1, casadi_s2, w, 0);
  /* #168: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #169: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s41, w5, casadi_s5, w, 0);
  /* #170: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #171: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s41, w7, casadi_s7, w, 0);
  /* #172: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #173: (@0[16, 88, 160, 232, 304, 376, 448, 520, 592, 664, 736, 808, 880, 952, 1024, 1096, 1168, 1240, 1312, 1384, 1456, 1528, 1600, 1672, 1744, 1816, 1888, 1960, 2032, 2104, 2176, 2248, 2320, 2392, 2464, 2498, 2532, 2566, 2600, 2634, 2668, 2703, 2738, 2773, 2808, 2843, 2878, 2913, 2948, 2983, 3018, 3053, 3088, 3123, 3158, 3193, 3228, 3263, 3298, 3333, 3368, 3403, 3438, 3473, 3508, 3543, 3578, 3613, 3648, 3683, 3718, 3753, 3788, 3823, 3858, 3893, 3928, 3963, 3998, 4033, 4068, 4103] = @9) */
  for (cii=casadi_s42, rr=w0, ss=w9; cii!=casadi_s42+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #174: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #175: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #176: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #177: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s43, w1, casadi_s2, w, 0);
  /* #178: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #179: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s43, w5, casadi_s5, w, 0);
  /* #180: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #181: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s43, w7, casadi_s7, w, 0);
  /* #182: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #183: (@0[17, 89, 161, 233, 305, 377, 449, 521, 593, 665, 737, 809, 881, 953, 1025, 1097, 1169, 1241, 1313, 1385, 1457, 1529, 1601, 1673, 1745, 1817, 1889, 1961, 2033, 2105, 2177, 2249, 2321, 2393, 2465, 2499, 2533, 2567, 2601, 2635, 2669, 2704, 2739, 2774, 2809, 2844, 2879, 2914, 2949, 2984, 3019, 3054, 3089, 3124, 3159, 3194, 3229, 3264, 3299, 3334, 3369, 3404, 3439, 3474, 3509, 3544, 3579, 3614, 3649, 3684, 3719, 3754, 3789, 3824, 3859, 3894, 3929, 3964, 3999, 4034, 4069, 4104] = @9) */
  for (cii=casadi_s44, rr=w0, ss=w9; cii!=casadi_s44+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #184: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #185: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #186: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #187: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s45, w1, casadi_s2, w, 0);
  /* #188: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #189: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s45, w5, casadi_s5, w, 0);
  /* #190: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #191: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s45, w7, casadi_s7, w, 0);
  /* #192: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #193: (@0[18, 90, 162, 234, 306, 378, 450, 522, 594, 666, 738, 810, 882, 954, 1026, 1098, 1170, 1242, 1314, 1386, 1458, 1530, 1602, 1674, 1746, 1818, 1890, 1962, 2034, 2106, 2178, 2250, 2322, 2394, 2466, 2500, 2534, 2568, 2602, 2636, 2670, 2705, 2740, 2775, 2810, 2845, 2880, 2915, 2950, 2985, 3020, 3055, 3090, 3125, 3160, 3195, 3230, 3265, 3300, 3335, 3370, 3405, 3440, 3475, 3510, 3545, 3580, 3615, 3650, 3685, 3720, 3755, 3790, 3825, 3860, 3895, 3930, 3965, 4000, 4035, 4070, 4105] = @9) */
  for (cii=casadi_s46, rr=w0, ss=w9; cii!=casadi_s46+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #194: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #195: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #196: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #197: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s47, w1, casadi_s2, w, 0);
  /* #198: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #199: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s47, w5, casadi_s5, w, 0);
  /* #200: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #201: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s47, w7, casadi_s7, w, 0);
  /* #202: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #203: (@0[19, 91, 163, 235, 307, 379, 451, 523, 595, 667, 739, 811, 883, 955, 1027, 1099, 1171, 1243, 1315, 1387, 1459, 1531, 1603, 1675, 1747, 1819, 1891, 1963, 2035, 2107, 2179, 2251, 2323, 2395, 2467, 2501, 2535, 2569, 2603, 2637, 2671, 2706, 2741, 2776, 2811, 2846, 2881, 2916, 2951, 2986, 3021, 3056, 3091, 3126, 3161, 3196, 3231, 3266, 3301, 3336, 3371, 3406, 3441, 3476, 3511, 3546, 3581, 3616, 3651, 3686, 3721, 3756, 3791, 3826, 3861, 3896, 3931, 3966, 4001, 4036, 4071, 4106] = @9) */
  for (cii=casadi_s48, rr=w0, ss=w9; cii!=casadi_s48+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #204: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #205: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #206: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #207: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s49, w1, casadi_s2, w, 0);
  /* #208: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #209: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s49, w5, casadi_s5, w, 0);
  /* #210: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #211: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s49, w7, casadi_s7, w, 0);
  /* #212: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #213: (@0[20, 92, 164, 236, 308, 380, 452, 524, 596, 668, 740, 812, 884, 956, 1028, 1100, 1172, 1244, 1316, 1388, 1460, 1532, 1604, 1676, 1748, 1820, 1892, 1964, 2036, 2108, 2180, 2252, 2324, 2396, 2468, 2502, 2536, 2570, 2604, 2638, 2672, 2707, 2742, 2777, 2812, 2847, 2882, 2917, 2952, 2987, 3022, 3057, 3092, 3127, 3162, 3197, 3232, 3267, 3302, 3337, 3372, 3407, 3442, 3477, 3512, 3547, 3582, 3617, 3652, 3687, 3722, 3757, 3792, 3827, 3862, 3897, 3932, 3967, 4002, 4037, 4072, 4107] = @9) */
  for (cii=casadi_s50, rr=w0, ss=w9; cii!=casadi_s50+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #214: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #215: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #216: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #217: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s51, w1, casadi_s2, w, 0);
  /* #218: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #219: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s51, w5, casadi_s5, w, 0);
  /* #220: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #221: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s51, w7, casadi_s7, w, 0);
  /* #222: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #223: (@0[21, 93, 165, 237, 309, 381, 453, 525, 597, 669, 741, 813, 885, 957, 1029, 1101, 1173, 1245, 1317, 1389, 1461, 1533, 1605, 1677, 1749, 1821, 1893, 1965, 2037, 2109, 2181, 2253, 2325, 2397, 2469, 2503, 2537, 2571, 2605, 2639, 2673, 2708, 2743, 2778, 2813, 2848, 2883, 2918, 2953, 2988, 3023, 3058, 3093, 3128, 3163, 3198, 3233, 3268, 3303, 3338, 3373, 3408, 3443, 3478, 3513, 3548, 3583, 3618, 3653, 3688, 3723, 3758, 3793, 3828, 3863, 3898, 3933, 3968, 4003, 4038, 4073, 4108] = @9) */
  for (cii=casadi_s52, rr=w0, ss=w9; cii!=casadi_s52+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #224: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #225: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #226: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #227: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s53, w1, casadi_s2, w, 0);
  /* #228: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #229: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s53, w5, casadi_s5, w, 0);
  /* #230: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #231: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s53, w7, casadi_s7, w, 0);
  /* #232: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #233: (@0[22, 94, 166, 238, 310, 382, 454, 526, 598, 670, 742, 814, 886, 958, 1030, 1102, 1174, 1246, 1318, 1390, 1462, 1534, 1606, 1678, 1750, 1822, 1894, 1966, 2038, 2110, 2182, 2254, 2326, 2398, 2470, 2504, 2538, 2572, 2606, 2640, 2674, 2709, 2744, 2779, 2814, 2849, 2884, 2919, 2954, 2989, 3024, 3059, 3094, 3129, 3164, 3199, 3234, 3269, 3304, 3339, 3374, 3409, 3444, 3479, 3514, 3549, 3584, 3619, 3654, 3689, 3724, 3759, 3794, 3829, 3864, 3899, 3934, 3969, 4004, 4039, 4074, 4109] = @9) */
  for (cii=casadi_s54, rr=w0, ss=w9; cii!=casadi_s54+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #234: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #235: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #236: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #237: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s55, w1, casadi_s2, w, 0);
  /* #238: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #239: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s55, w5, casadi_s5, w, 0);
  /* #240: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #241: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s55, w7, casadi_s7, w, 0);
  /* #242: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #243: (@0[23, 95, 167, 239, 311, 383, 455, 527, 599, 671, 743, 815, 887, 959, 1031, 1103, 1175, 1247, 1319, 1391, 1463, 1535, 1607, 1679, 1751, 1823, 1895, 1967, 2039, 2111, 2183, 2255, 2327, 2399, 2471, 2505, 2539, 2573, 2607, 2641, 2675, 2710, 2745, 2780, 2815, 2850, 2885, 2920, 2955, 2990, 3025, 3060, 3095, 3130, 3165, 3200, 3235, 3270, 3305, 3340, 3375, 3410, 3445, 3480, 3515, 3550, 3585, 3620, 3655, 3690, 3725, 3760, 3795, 3830, 3865, 3900, 3935, 3970, 4005, 4040, 4075, 4110] = @9) */
  for (cii=casadi_s56, rr=w0, ss=w9; cii!=casadi_s56+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #244: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #245: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #246: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #247: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s57, w1, casadi_s2, w, 0);
  /* #248: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #249: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s57, w5, casadi_s5, w, 0);
  /* #250: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #251: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s57, w7, casadi_s7, w, 0);
  /* #252: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #253: (@0[24, 96, 168, 240, 312, 384, 456, 528, 600, 672, 744, 816, 888, 960, 1032, 1104, 1176, 1248, 1320, 1392, 1464, 1536, 1608, 1680, 1752, 1824, 1896, 1968, 2040, 2112, 2184, 2256, 2328, 2400, 2472, 2506, 2540, 2574, 2608, 2642, 2676, 2711, 2746, 2781, 2816, 2851, 2886, 2921, 2956, 2991, 3026, 3061, 3096, 3131, 3166, 3201, 3236, 3271, 3306, 3341, 3376, 3411, 3446, 3481, 3516, 3551, 3586, 3621, 3656, 3691, 3726, 3761, 3796, 3831, 3866, 3901, 3936, 3971, 4006, 4041, 4076, 4111] = @9) */
  for (cii=casadi_s58, rr=w0, ss=w9; cii!=casadi_s58+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #254: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #255: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #256: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #257: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s59, w1, casadi_s2, w, 0);
  /* #258: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #259: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s59, w5, casadi_s5, w, 0);
  /* #260: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #261: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s59, w7, casadi_s7, w, 0);
  /* #262: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #263: (@0[25, 97, 169, 241, 313, 385, 457, 529, 601, 673, 745, 817, 889, 961, 1033, 1105, 1177, 1249, 1321, 1393, 1465, 1537, 1609, 1681, 1753, 1825, 1897, 1969, 2041, 2113, 2185, 2257, 2329, 2401, 2473, 2507, 2541, 2575, 2609, 2643, 2677, 2712, 2747, 2782, 2817, 2852, 2887, 2922, 2957, 2992, 3027, 3062, 3097, 3132, 3167, 3202, 3237, 3272, 3307, 3342, 3377, 3412, 3447, 3482, 3517, 3552, 3587, 3622, 3657, 3692, 3727, 3762, 3797, 3832, 3867, 3902, 3937, 3972, 4007, 4042, 4077, 4112] = @9) */
  for (cii=casadi_s60, rr=w0, ss=w9; cii!=casadi_s60+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #264: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #265: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #266: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #267: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s61, w1, casadi_s2, w, 0);
  /* #268: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #269: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s61, w5, casadi_s5, w, 0);
  /* #270: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #271: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s61, w7, casadi_s7, w, 0);
  /* #272: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #273: (@0[26, 98, 170, 242, 314, 386, 458, 530, 602, 674, 746, 818, 890, 962, 1034, 1106, 1178, 1250, 1322, 1394, 1466, 1538, 1610, 1682, 1754, 1826, 1898, 1970, 2042, 2114, 2186, 2258, 2330, 2402, 2474, 2508, 2542, 2576, 2610, 2644, 2678, 2713, 2748, 2783, 2818, 2853, 2888, 2923, 2958, 2993, 3028, 3063, 3098, 3133, 3168, 3203, 3238, 3273, 3308, 3343, 3378, 3413, 3448, 3483, 3518, 3553, 3588, 3623, 3658, 3693, 3728, 3763, 3798, 3833, 3868, 3903, 3938, 3973, 4008, 4043, 4078, 4113] = @9) */
  for (cii=casadi_s62, rr=w0, ss=w9; cii!=casadi_s62+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #274: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #275: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #276: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #277: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s63, w1, casadi_s2, w, 0);
  /* #278: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #279: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s63, w5, casadi_s5, w, 0);
  /* #280: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #281: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s63, w7, casadi_s7, w, 0);
  /* #282: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #283: (@0[27, 99, 171, 243, 315, 387, 459, 531, 603, 675, 747, 819, 891, 963, 1035, 1107, 1179, 1251, 1323, 1395, 1467, 1539, 1611, 1683, 1755, 1827, 1899, 1971, 2043, 2115, 2187, 2259, 2331, 2403, 2475, 2509, 2543, 2577, 2611, 2645, 2679, 2714, 2749, 2784, 2819, 2854, 2889, 2924, 2959, 2994, 3029, 3064, 3099, 3134, 3169, 3204, 3239, 3274, 3309, 3344, 3379, 3414, 3449, 3484, 3519, 3554, 3589, 3624, 3659, 3694, 3729, 3764, 3799, 3834, 3869, 3904, 3939, 3974, 4009, 4044, 4079, 4114] = @9) */
  for (cii=casadi_s64, rr=w0, ss=w9; cii!=casadi_s64+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #284: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #285: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #286: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #287: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s65, w1, casadi_s2, w, 0);
  /* #288: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #289: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s65, w5, casadi_s5, w, 0);
  /* #290: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #291: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s65, w7, casadi_s7, w, 0);
  /* #292: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #293: (@0[28, 100, 172, 244, 316, 388, 460, 532, 604, 676, 748, 820, 892, 964, 1036, 1108, 1180, 1252, 1324, 1396, 1468, 1540, 1612, 1684, 1756, 1828, 1900, 1972, 2044, 2116, 2188, 2260, 2332, 2404, 2476, 2510, 2544, 2578, 2612, 2646, 2680, 2715, 2750, 2785, 2820, 2855, 2890, 2925, 2960, 2995, 3030, 3065, 3100, 3135, 3170, 3205, 3240, 3275, 3310, 3345, 3380, 3415, 3450, 3485, 3520, 3555, 3590, 3625, 3660, 3695, 3730, 3765, 3800, 3835, 3870, 3905, 3940, 3975, 4010, 4045, 4080, 4115] = @9) */
  for (cii=casadi_s66, rr=w0, ss=w9; cii!=casadi_s66+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #294: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #295: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #296: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #297: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s67, w1, casadi_s2, w, 0);
  /* #298: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #299: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s67, w5, casadi_s5, w, 0);
  /* #300: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #301: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s67, w7, casadi_s7, w, 0);
  /* #302: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #303: (@0[29, 101, 173, 245, 317, 389, 461, 533, 605, 677, 749, 821, 893, 965, 1037, 1109, 1181, 1253, 1325, 1397, 1469, 1541, 1613, 1685, 1757, 1829, 1901, 1973, 2045, 2117, 2189, 2261, 2333, 2405, 2477, 2511, 2545, 2579, 2613, 2647, 2681, 2716, 2751, 2786, 2821, 2856, 2891, 2926, 2961, 2996, 3031, 3066, 3101, 3136, 3171, 3206, 3241, 3276, 3311, 3346, 3381, 3416, 3451, 3486, 3521, 3556, 3591, 3626, 3661, 3696, 3731, 3766, 3801, 3836, 3871, 3906, 3941, 3976, 4011, 4046, 4081, 4116] = @9) */
  for (cii=casadi_s68, rr=w0, ss=w9; cii!=casadi_s68+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #304: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #305: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #306: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #307: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s69, w1, casadi_s2, w, 0);
  /* #308: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #309: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s69, w5, casadi_s5, w, 0);
  /* #310: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #311: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s69, w7, casadi_s7, w, 0);
  /* #312: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #313: (@0[30, 102, 174, 246, 318, 390, 462, 534, 606, 678, 750, 822, 894, 966, 1038, 1110, 1182, 1254, 1326, 1398, 1470, 1542, 1614, 1686, 1758, 1830, 1902, 1974, 2046, 2118, 2190, 2262, 2334, 2406, 2478, 2512, 2546, 2580, 2614, 2648, 2682, 2717, 2752, 2787, 2822, 2857, 2892, 2927, 2962, 2997, 3032, 3067, 3102, 3137, 3172, 3207, 3242, 3277, 3312, 3347, 3382, 3417, 3452, 3487, 3522, 3557, 3592, 3627, 3662, 3697, 3732, 3767, 3802, 3837, 3872, 3907, 3942, 3977, 4012, 4047, 4082, 4117] = @9) */
  for (cii=casadi_s70, rr=w0, ss=w9; cii!=casadi_s70+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #314: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #315: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #316: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #317: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s71, w1, casadi_s2, w, 0);
  /* #318: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #319: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s71, w5, casadi_s5, w, 0);
  /* #320: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #321: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s71, w7, casadi_s7, w, 0);
  /* #322: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #323: (@0[31, 103, 175, 247, 319, 391, 463, 535, 607, 679, 751, 823, 895, 967, 1039, 1111, 1183, 1255, 1327, 1399, 1471, 1543, 1615, 1687, 1759, 1831, 1903, 1975, 2047, 2119, 2191, 2263, 2335, 2407, 2479, 2513, 2547, 2581, 2615, 2649, 2683, 2718, 2753, 2788, 2823, 2858, 2893, 2928, 2963, 2998, 3033, 3068, 3103, 3138, 3173, 3208, 3243, 3278, 3313, 3348, 3383, 3418, 3453, 3488, 3523, 3558, 3593, 3628, 3663, 3698, 3733, 3768, 3803, 3838, 3873, 3908, 3943, 3978, 4013, 4048, 4083, 4118] = @9) */
  for (cii=casadi_s72, rr=w0, ss=w9; cii!=casadi_s72+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #324: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #325: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #326: {@4, NULL, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #327: @1 = mac(@2,@4,@1) */
  casadi_mtimes(w2, casadi_s1, (&w4), casadi_s73, w1, casadi_s2, w, 0);
  /* #328: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #329: @5 = mac(@6,@4,@5) */
  casadi_mtimes(w6, casadi_s4, (&w4), casadi_s73, w5, casadi_s5, w, 0);
  /* #330: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #331: @7 = mac(@8,@4,@7) */
  casadi_mtimes(w8, casadi_s6, (&w4), casadi_s73, w7, casadi_s7, w, 0);
  /* #332: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #333: (@0[32, 104, 176, 248, 320, 392, 464, 536, 608, 680, 752, 824, 896, 968, 1040, 1112, 1184, 1256, 1328, 1400, 1472, 1544, 1616, 1688, 1760, 1832, 1904, 1976, 2048, 2120, 2192, 2264, 2336, 2408, 2480, 2514, 2548, 2582, 2616, 2650, 2684, 2719, 2754, 2789, 2824, 2859, 2894, 2929, 2964, 2999, 3034, 3069, 3104, 3139, 3174, 3209, 3244, 3279, 3314, 3349, 3384, 3419, 3454, 3489, 3524, 3559, 3594, 3629, 3664, 3699, 3734, 3769, 3804, 3839, 3874, 3909, 3944, 3979, 4014, 4049, 4084, 4119] = @9) */
  for (cii=casadi_s74, rr=w0, ss=w9; cii!=casadi_s74+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #334: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #335: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #336: {@3, NULL, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #337: @1 = mac(@2,@3,@1) */
  casadi_mtimes(w2, casadi_s1, (&w3), casadi_s75, w1, casadi_s2, w, 0);
  /* #338: @5 = zeros(6x1) */
  casadi_clear(w5, 6);
  /* #339: @5 = mac(@6,@3,@5) */
  casadi_mtimes(w6, casadi_s4, (&w3), casadi_s75, w5, casadi_s5, w, 0);
  /* #340: @7 = zeros(42x1) */
  casadi_clear(w7, 42);
  /* #341: @7 = mac(@8,@3,@7) */
  casadi_mtimes(w8, casadi_s6, (&w3), casadi_s75, w7, casadi_s7, w, 0);
  /* #342: @9 = vertcat(@1, @5, @7) */
  rr=w9;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w5; i<6; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #343: (@0[33, 105, 177, 249, 321, 393, 465, 537, 609, 681, 753, 825, 897, 969, 1041, 1113, 1185, 1257, 1329, 1401, 1473, 1545, 1617, 1689, 1761, 1833, 1905, 1977, 2049, 2121, 2193, 2265, 2337, 2409, 2481, 2515, 2549, 2583, 2617, 2651, 2685, 2720, 2755, 2790, 2825, 2860, 2895, 2930, 2965, 3000, 3035, 3070, 3105, 3140, 3175, 3210, 3245, 3280, 3315, 3350, 3385, 3420, 3455, 3490, 3525, 3560, 3595, 3630, 3665, 3700, 3735, 3770, 3805, 3840, 3875, 3910, 3945, 3980, 4015, 4050, 4085, 4120] = @9) */
  for (cii=casadi_s76, rr=w0, ss=w9; cii!=casadi_s76+82; ++cii, ++ss) rr[*cii] = *ss;
  /* #344: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #345: @10 = input[4][0] */
  casadi_copy(arg[4], 680, w10);
  /* #346: @11 = ones(114x1,43nz) */
  casadi_fill(w11, 43, 1.);
  /* #347: {NULL, @3, NULL, NULL, @7} = vertsplit(@11) */
  w3 = w11[0];
  casadi_copy(w11+1, 42, w7);
  /* #348: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s77, w1, casadi_s2, w, 0);
  /* #349: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #350: @12 = zeros(6x1,0nz) */
  /* #351: @7 = (-@7) */
  for (i=0, rr=w7, cs=w7; i<42; ++i) *rr++ = (- *cs++ );
  /* #352: @13 = vertcat(@1, @12, @7) */
  rr=w13;
  for (i=0, cs=w1; i<34; ++i) *rr++ = *cs++;
  for (i=0, cs=w7; i<42; ++i) *rr++ = *cs++;
  /* #353: @14 = @13[:76] */
  for (rr=w14, ss=w13+0; ss!=w13+76; ss+=1) *rr++ = *ss;
  /* #354: (@0[34, 106, 178, 250, 322, 394, 466, 538, 610, 682, 754, 826, 898, 970, 1042, 1114, 1186, 1258, 1330, 1402, 1474, 1546, 1618, 1690, 1762, 1834, 1906, 1978, 2050, 2122, 2194, 2266, 2338, 2410, 2686, 2721, 2756, 2791, 2826, 2861, 2896, 2931, 2966, 3001, 3036, 3071, 3106, 3141, 3176, 3211, 3246, 3281, 3316, 3351, 3386, 3421, 3456, 3491, 3526, 3561, 3596, 3631, 3666, 3701, 3736, 3771, 3806, 3841, 3876, 3911, 3946, 3981, 4016, 4051, 4086, 4121] = @14) */
  for (cii=casadi_s78, rr=w0, ss=w14; cii!=casadi_s78+76; ++cii, ++ss) rr[*cii] = *ss;
  /* #355: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #356: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #357: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #358: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s79, w1, casadi_s2, w, 0);
  /* #359: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #360: (@0[35:2483:72] = @1) */
  for (rr=w0+35, ss=w1; rr!=w0+2483; rr+=72) *rr = *ss++;
  /* #361: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #362: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #363: {NULL, @3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #364: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s80, w1, casadi_s2, w, 0);
  /* #365: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #366: (@0[36:2484:72] = @1) */
  for (rr=w0+36, ss=w1; rr!=w0+2484; rr+=72) *rr = *ss++;
  /* #367: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #368: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #369: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #370: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s81, w1, casadi_s2, w, 0);
  /* #371: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #372: (@0[37:2485:72] = @1) */
  for (rr=w0+37, ss=w1; rr!=w0+2485; rr+=72) *rr = *ss++;
  /* #373: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #374: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #375: {NULL, @3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #376: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s82, w1, casadi_s2, w, 0);
  /* #377: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #378: (@0[38:2486:72] = @1) */
  for (rr=w0+38, ss=w1; rr!=w0+2486; rr+=72) *rr = *ss++;
  /* #379: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #380: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #381: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #382: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s83, w1, casadi_s2, w, 0);
  /* #383: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #384: (@0[39:2487:72] = @1) */
  for (rr=w0+39, ss=w1; rr!=w0+2487; rr+=72) *rr = *ss++;
  /* #385: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #386: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #387: {NULL, @3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #388: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s84, w1, casadi_s2, w, 0);
  /* #389: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #390: (@0[40:2488:72] = @1) */
  for (rr=w0+40, ss=w1; rr!=w0+2488; rr+=72) *rr = *ss++;
  /* #391: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #392: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #393: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #394: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s85, w1, casadi_s2, w, 0);
  /* #395: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #396: (@0[41:2489:72] = @1) */
  for (rr=w0+41, ss=w1; rr!=w0+2489; rr+=72) *rr = *ss++;
  /* #397: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #398: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #399: {NULL, @3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #400: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s86, w1, casadi_s2, w, 0);
  /* #401: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #402: (@0[42:2490:72] = @1) */
  for (rr=w0+42, ss=w1; rr!=w0+2490; rr+=72) *rr = *ss++;
  /* #403: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #404: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #405: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #406: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s87, w1, casadi_s2, w, 0);
  /* #407: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #408: (@0[43:2491:72] = @1) */
  for (rr=w0+43, ss=w1; rr!=w0+2491; rr+=72) *rr = *ss++;
  /* #409: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #410: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #411: {NULL, @3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #412: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s88, w1, casadi_s2, w, 0);
  /* #413: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #414: (@0[44:2492:72] = @1) */
  for (rr=w0+44, ss=w1; rr!=w0+2492; rr+=72) *rr = *ss++;
  /* #415: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #416: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #417: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #418: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s89, w1, casadi_s2, w, 0);
  /* #419: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #420: (@0[45:2493:72] = @1) */
  for (rr=w0+45, ss=w1; rr!=w0+2493; rr+=72) *rr = *ss++;
  /* #421: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #422: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #423: {NULL, @3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #424: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s90, w1, casadi_s2, w, 0);
  /* #425: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #426: (@0[46:2494:72] = @1) */
  for (rr=w0+46, ss=w1; rr!=w0+2494; rr+=72) *rr = *ss++;
  /* #427: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #428: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #429: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #430: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s91, w1, casadi_s2, w, 0);
  /* #431: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #432: (@0[47:2495:72] = @1) */
  for (rr=w0+47, ss=w1; rr!=w0+2495; rr+=72) *rr = *ss++;
  /* #433: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #434: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #435: {NULL, @3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #436: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s92, w1, casadi_s2, w, 0);
  /* #437: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #438: (@0[48:2496:72] = @1) */
  for (rr=w0+48, ss=w1; rr!=w0+2496; rr+=72) *rr = *ss++;
  /* #439: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #440: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #441: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #442: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s93, w1, casadi_s2, w, 0);
  /* #443: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #444: (@0[49:2497:72] = @1) */
  for (rr=w0+49, ss=w1; rr!=w0+2497; rr+=72) *rr = *ss++;
  /* #445: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #446: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #447: {NULL, @3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #448: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s94, w1, casadi_s2, w, 0);
  /* #449: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #450: (@0[50:2498:72] = @1) */
  for (rr=w0+50, ss=w1; rr!=w0+2498; rr+=72) *rr = *ss++;
  /* #451: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #452: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #453: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #454: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s95, w1, casadi_s2, w, 0);
  /* #455: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #456: (@0[51:2499:72] = @1) */
  for (rr=w0+51, ss=w1; rr!=w0+2499; rr+=72) *rr = *ss++;
  /* #457: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #458: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #459: {NULL, @3, NULL, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #460: @1 = mac(@10,@3,@1) */
  casadi_mtimes(w10, casadi_s3, (&w3), casadi_s96, w1, casadi_s2, w, 0);
  /* #461: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #462: (@0[52:2500:72] = @1) */
  for (rr=w0+52, ss=w1; rr!=w0+2500; rr+=72) *rr = *ss++;
  /* #463: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #464: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #465: {NULL, @4, NULL, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #466: @1 = mac(@10,@4,@1) */
  casadi_mtimes(w10, casadi_s3, (&w4), casadi_s97, w1, casadi_s2, w, 0);
  /* #467: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #468: (@0[53:2501:72] = @1) */
  for (rr=w0+53, ss=w1; rr!=w0+2501; rr+=72) *rr = *ss++;
  /* #469: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #470: @15 = @6' */
  for (i=0, rr=w15, cs=w6; i<34; ++i) for (j=0; j<6; ++j) rr[i+j*34] = *cs++;
  /* #471: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #472: {NULL, NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #473: @1 = mac(@15,@3,@1) */
  casadi_mtimes(w15, casadi_s99, (&w3), casadi_s98, w1, casadi_s2, w, 0);
  /* #474: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #475: (@0[54:2502:72] = @1) */
  for (rr=w0+54, ss=w1; rr!=w0+2502; rr+=72) *rr = *ss++;
  /* #476: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #477: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #478: {NULL, NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #479: @1 = mac(@15,@4,@1) */
  casadi_mtimes(w15, casadi_s99, (&w4), casadi_s100, w1, casadi_s2, w, 0);
  /* #480: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #481: (@0[55:2503:72] = @1) */
  for (rr=w0+55, ss=w1; rr!=w0+2503; rr+=72) *rr = *ss++;
  /* #482: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #483: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #484: {NULL, NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #485: @1 = mac(@15,@3,@1) */
  casadi_mtimes(w15, casadi_s99, (&w3), casadi_s101, w1, casadi_s2, w, 0);
  /* #486: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #487: (@0[56:2504:72] = @1) */
  for (rr=w0+56, ss=w1; rr!=w0+2504; rr+=72) *rr = *ss++;
  /* #488: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #489: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #490: {NULL, NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #491: @1 = mac(@15,@4,@1) */
  casadi_mtimes(w15, casadi_s99, (&w4), casadi_s102, w1, casadi_s2, w, 0);
  /* #492: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #493: (@0[57:2505:72] = @1) */
  for (rr=w0+57, ss=w1; rr!=w0+2505; rr+=72) *rr = *ss++;
  /* #494: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #495: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #496: {NULL, NULL, @3, NULL, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #497: @1 = mac(@15,@3,@1) */
  casadi_mtimes(w15, casadi_s99, (&w3), casadi_s103, w1, casadi_s2, w, 0);
  /* #498: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #499: (@0[58:2506:72] = @1) */
  for (rr=w0+58, ss=w1; rr!=w0+2506; rr+=72) *rr = *ss++;
  /* #500: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #501: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #502: {NULL, NULL, @4, NULL, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #503: @1 = mac(@15,@4,@1) */
  casadi_mtimes(w15, casadi_s99, (&w4), casadi_s104, w1, casadi_s2, w, 0);
  /* #504: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #505: (@0[59:2507:72] = @1) */
  for (rr=w0+59, ss=w1; rr!=w0+2507; rr+=72) *rr = *ss++;
  /* #506: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #507: @16 = @8' */
  for (i=0, rr=w16, cs=w8; i<34; ++i) for (j=0; j<42; ++j) rr[i+j*34] = *cs++;
  /* #508: {NULL, @15, @6, NULL, NULL, NULL, NULL} = horzsplit(@16) */
  casadi_copy(w16+204, 204, w15);
  casadi_copy(w16+408, 204, w6);
  /* #509: @17 = horzcat(@15, @6) */
  rr=w17;
  for (i=0, cs=w15; i<204; ++i) *rr++ = *cs++;
  for (i=0, cs=w6; i<204; ++i) *rr++ = *cs++;
  /* #510: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #511: {NULL, NULL, NULL, @3, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #512: @1 = mac(@17,@3,@1) */
  casadi_mtimes(w17, casadi_s106, (&w3), casadi_s105, w1, casadi_s2, w, 0);
  /* #513: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #514: (@0[60:2508:72] = @1) */
  for (rr=w0+60, ss=w1; rr!=w0+2508; rr+=72) *rr = *ss++;
  /* #515: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #516: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #517: {NULL, NULL, NULL, @4, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #518: @1 = mac(@17,@4,@1) */
  casadi_mtimes(w17, casadi_s106, (&w4), casadi_s107, w1, casadi_s2, w, 0);
  /* #519: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #520: (@0[61:2509:72] = @1) */
  for (rr=w0+61, ss=w1; rr!=w0+2509; rr+=72) *rr = *ss++;
  /* #521: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #522: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #523: {NULL, NULL, NULL, @3, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #524: @1 = mac(@17,@3,@1) */
  casadi_mtimes(w17, casadi_s106, (&w3), casadi_s108, w1, casadi_s2, w, 0);
  /* #525: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #526: (@0[62:2510:72] = @1) */
  for (rr=w0+62, ss=w1; rr!=w0+2510; rr+=72) *rr = *ss++;
  /* #527: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #528: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #529: {NULL, NULL, NULL, @4, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #530: @1 = mac(@17,@4,@1) */
  casadi_mtimes(w17, casadi_s106, (&w4), casadi_s109, w1, casadi_s2, w, 0);
  /* #531: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #532: (@0[63:2511:72] = @1) */
  for (rr=w0+63, ss=w1; rr!=w0+2511; rr+=72) *rr = *ss++;
  /* #533: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #534: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #535: {NULL, NULL, NULL, @3, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #536: @1 = mac(@17,@3,@1) */
  casadi_mtimes(w17, casadi_s106, (&w3), casadi_s110, w1, casadi_s2, w, 0);
  /* #537: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #538: (@0[64:2512:72] = @1) */
  for (rr=w0+64, ss=w1; rr!=w0+2512; rr+=72) *rr = *ss++;
  /* #539: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #540: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #541: {NULL, NULL, NULL, @4, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #542: @1 = mac(@17,@4,@1) */
  casadi_mtimes(w17, casadi_s106, (&w4), casadi_s111, w1, casadi_s2, w, 0);
  /* #543: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #544: (@0[65:2513:72] = @1) */
  for (rr=w0+65, ss=w1; rr!=w0+2513; rr+=72) *rr = *ss++;
  /* #545: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #546: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #547: {NULL, NULL, NULL, @3, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #548: @1 = mac(@17,@3,@1) */
  casadi_mtimes(w17, casadi_s106, (&w3), casadi_s112, w1, casadi_s2, w, 0);
  /* #549: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #550: (@0[66:2514:72] = @1) */
  for (rr=w0+66, ss=w1; rr!=w0+2514; rr+=72) *rr = *ss++;
  /* #551: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #552: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #553: {NULL, NULL, NULL, @4, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #554: @1 = mac(@17,@4,@1) */
  casadi_mtimes(w17, casadi_s106, (&w4), casadi_s113, w1, casadi_s2, w, 0);
  /* #555: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #556: (@0[67:2515:72] = @1) */
  for (rr=w0+67, ss=w1; rr!=w0+2515; rr+=72) *rr = *ss++;
  /* #557: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #558: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #559: {NULL, NULL, NULL, @3, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #560: @1 = mac(@17,@3,@1) */
  casadi_mtimes(w17, casadi_s106, (&w3), casadi_s114, w1, casadi_s2, w, 0);
  /* #561: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #562: (@0[68:2516:72] = @1) */
  for (rr=w0+68, ss=w1; rr!=w0+2516; rr+=72) *rr = *ss++;
  /* #563: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #564: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #565: {NULL, NULL, NULL, @4, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #566: @1 = mac(@17,@4,@1) */
  casadi_mtimes(w17, casadi_s106, (&w4), casadi_s115, w1, casadi_s2, w, 0);
  /* #567: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #568: (@0[69:2517:72] = @1) */
  for (rr=w0+69, ss=w1; rr!=w0+2517; rr+=72) *rr = *ss++;
  /* #569: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #570: @4 = ones(114x1,1nz) */
  w4 = 1.;
  /* #571: {NULL, NULL, NULL, @3, NULL} = vertsplit(@4) */
  w3 = w4;
  /* #572: @1 = mac(@17,@3,@1) */
  casadi_mtimes(w17, casadi_s106, (&w3), casadi_s116, w1, casadi_s2, w, 0);
  /* #573: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #574: (@0[70:2518:72] = @1) */
  for (rr=w0+70, ss=w1; rr!=w0+2518; rr+=72) *rr = *ss++;
  /* #575: @1 = zeros(34x1) */
  casadi_clear(w1, 34);
  /* #576: @3 = ones(114x1,1nz) */
  w3 = 1.;
  /* #577: {NULL, NULL, NULL, @4, NULL} = vertsplit(@3) */
  w4 = w3;
  /* #578: @1 = mac(@17,@4,@1) */
  casadi_mtimes(w17, casadi_s106, (&w4), casadi_s117, w1, casadi_s2, w, 0);
  /* #579: @1 = (-@1) */
  for (i=0, rr=w1, cs=w1; i<34; ++i) *rr++ = (- *cs++ );
  /* #580: (@0[71:2519:72] = @1) */
  for (rr=w0+71, ss=w1; rr!=w0+2519; rr+=72) *rr = *ss++;
  /* #581: @18 = @0' */
  casadi_trans(w0,casadi_s119, w18, casadi_s118, iw);
  /* #582: output[0][0] = @18 */
  casadi_copy(w18, 4122, res[0]);
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f1(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void A_eq_function_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void A_eq_function_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void A_eq_function_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void A_eq_function_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int A_eq_function_n_in(void) { return 9;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int A_eq_function_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real A_eq_function_default_in(casadi_int i) {
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* A_eq_function_name_in(casadi_int i) {
  switch (i) {
    case 0: return "i0";
    case 1: return "i1";
    case 2: return "i2";
    case 3: return "i3";
    case 4: return "i4";
    case 5: return "i5";
    case 6: return "i6";
    case 7: return "i7";
    case 8: return "i8";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* A_eq_function_name_out(casadi_int i) {
  switch (i) {
    case 0: return "o0";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* A_eq_function_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    case 2: return casadi_s2;
    case 3: return casadi_s2;
    case 4: return casadi_s3;
    case 5: return casadi_s4;
    case 6: return casadi_s5;
    case 7: return casadi_s6;
    case 8: return casadi_s7;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* A_eq_function_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s118;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int A_eq_function_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 12;
  if (sz_res) *sz_res = 8;
  if (sz_iw) *sz_iw = 115;
  if (sz_w) *sz_w = 14155;
  return 0;
}


